Construction Management and Economics (1994) 12, 445—455
Manipulating the flow of design information to improve the programming of building design
Department of Civil Engineering, Loughborough University of Technology, Loughborough, Leicester, LEI 1 3 TU,
Received 15 October 1993; revised 3 December 1993
The increasing complexity of modern buildings and the use of fast-track methods of procurement systems has meant the expeditious and successful completion of the design phase of a project has become ever more important. This paper describes a research methodology that can help plan the building design process. Design models, based on data flow diagrams, have been developed to map information flows during the design of a modern building. These models are analysed using Steward's design structure matrix, which allows ordering of the tasks to produce schedules or design plans based solely on information flowing between design tasks. Traditional ordering is based on experience but modern complex projects require a more rigorous approach. Design is an inherently iterative activity and design structure matrix analysis reveals how to order most effciently interdependent tasks and use estimates of design information further to improve the scheduling of design tasks.
Introduction
The increasing complexity of modern buildings in a highly competitive market-place has significantly increased pressures on contractors as they attempt to complete projects on time and within budget. Phased construction and fast-tracking techniques have been introduced to overlap design with construction and so reduce project duration. This introduces extra demands in all phases of the project. Much research time and effort has been dedicated to improving performance during the construction phase, both in terms of management and construction techniques. This is in marked contrast to the work aimed at improving performance during the design phase. This imbalance has been partially explained by Edlin (1991) who suggested that because design only accounts for 3—10% of the total project cost (excluding the cost of land) the greatest savings, in financial terms, can be made most easily by concentrating on improving construction effciency.
However, the relatively small cost of the design activity compared to construction belies its true importance to the project as a whole. Glavan and Tucker (1991) have shown how many minor design-related problems significantly affect construction performance.
This observation is backed up by the BEDC Report (1987) which found that the majority of construction problems are related to poor design information.
Since the 1950s many researchers, including Jones (1959) and Alexander (1964), have striven to understand the process of engineering design analytically and to suggest frameworks within which design could be performed more systematically. However, this work has not been sumciently utilized within the construction domain. A properly managed, systematic approach to the whole building design process is essential to ensure smooth and harmonious progress into construction. It will be argued in this paper that the building design needs to be planned and controlled more effectively and that existing planning techniques are not able to cope with the complexities of building design processes.
The main aim of this research is to develop a fresh approach to the programming, coordination and control of a multidisciplinary building design. To achieve this the project has been split into two segments of work, the objectives of which were:
1. to study, define and represent the work involved and the information flowing in a multidisciplinary building design project;
2. to develop research methodology to schedule the design phase more effciently.
The approach developed represents the design process with data flow diagrams (DFDs), a type of graphical representation of activities borrowed from structured analysis techniques developed by De Marco (1979) to assist in software system specification. These are shown to be a helpful and manageable way of defining the building design process. The DFDs are then converted into a matrix form and applied to partitioning and tearing techniques developed by Steward (1981) and Eppinger et al. (199()) to reorder design tasks to minimize iterations by grouping interdependent tasks. The work concentrates on the use of DFDs to describe and analyse the design process rather than the less rigorous directed graphs and matrices described by the aforementioned authors. These points are discussed in more detail elsewhere (S. Austin, A. Baldwin and A. Newton, submitted).
The design and development of any high technology building involves large numbers of design personnel making thousands of decisions, sometimes over a period of years. These decisions are very rarely performed in isolation. Traditional professional practices are being replaced increasingly by multidisciplinary practices (Bennett et al., 1988), which encourage and ease information transfer between professions, but have the disadvantage that the communication is often informal and not documented, making the management of design more diffcult. The successful performance of large multidisciplinary projects requires enormous coordination to ensure all parties are constantly aware of the every-changing status of the project in an attempt to eliminate design errors and limit design changes. However, these ideals are rarely achieved. A preliminary study (Newton, 1992) concluded that problems affecting the design phase of a building can be divided into five categories.
Increasing organizational complexity of the client or employer.
Increasing building complexity in terms of fabric and content.
Diffculty in planning the design phase.
Diffculty in managing information.
The designer has little direct control on the first three of these problems. However, this research and the following discussion concentrates on the last two categories of problems which can be influenced by improved design management. These areas have been shown to be closely related and it is apparent that there is great scope for improvement.
Information is seen as the fuel of design. The principal design activity of any project is evaluating and processing information and then communicating that information between various parties. In the majority of projects the planning or programming of the work to be carried out during the design phase is generally performed in a perfunctory fashion. This is often because designers believe that design, being a largely creative process, cannot be planned effectively. This viewpoint has been confirmed in separate studies by Cole (1993) and Rowden and Mansfield (1989). When it is performed, the planning is usually done on a discipline by discipline basis, with each discipline drawing up its own programme of work in isolation, usually on the principles of drawing production and other deliverables for which they are contractually obliged. Without collaboration and consideration of the work carried out by other disciplines it is impossible to coordinate the timing of the flow of cross-disciplinary information. The identification and coordination of these critical cross-disciplinary interfaces is usually left to the expertise of the design planner or project manager. A lack of design planning results in insumcient information being available to complete design tasks and inconsistencies within construction documents. Unfortunately, the traditional planning techniques of the construction industry are illsuited to planning, scheduling and controlling design activities.
Network analysis and bar charts are traditionally used to programme the design phase of a building project Levitt et al., 1988). Both techniques are ideally suited to deterministic processes such as construction where activities are predefined, but are unsuitable when handling a process that involves iterations or the choice of alternatives. Planning of the design phase must take place before the design commences if it is to be of real benefit to the design and management teams. Many decisions on the nature of the building will not have occurred at this time. These decisions or alternatives need to be incorporated into a plan or programme to allow management to explore their implications.
Manipulating information flow is seen as the key to organizing a multidisciplinary design project successfully. Bar charts and network analysis, whether active on the arrow or precedence networks, cannot represent looped tasks such as design iterations; they are only able to represent a one-way progression of activities or tasks along paths. They can represent activity dependencies,
information
(series)	(Parallel)	(Coupled)
etc., representing an input and/or an
Figure 1 Possible sequences for two design tasks
Individual functions
but not interdependences, i.e. those activities that need
that a system carries
to be performed in an iterative fashion. To do this, a loop
They transform an input into an
calculations, drawings,
would have to be introduced into the network, which is logically impossible. This concept of interdependent

tasks is shown in Fig. lc and clearly cannot be incorpor-
A collection of
ated into a traditional network. The tendency, therefore,
information that
is for design planners to define tasks as a whole, ignoring
the multiplicity of engineering interactions required within each one. A design plan of this nature tends to act
remembered for a period of time
as either a strait-jacket for designers, inhibiting the
Source/sink
design or is ignored totally. This often results in
with which the
'management by crisis' and abandonment of any
local authority
(a)Data or info	A connection	Category of design
Groåk (1993) likens the building process to the concept of chaos theory. Chaotic systems are highly sensitive, with seemingly insignificant events giving rise to supposedly unforeseeable consequences. Groåk (1993) goes on to argue that even chaotic systems are deterministic. It is hypothesized that determining information flows within our system (the design process) will lead to a greater understanding of this 'chaos' and that manipulating these information flows through successive stages of the design phase is the key to successful design management.
The flow of information is rapid and ever changing and needs to be studied in depth. This requires the mapping of information flows between disciplines and design tasks. This is best done by a graphical representation of the design tasks and the interfaces between them (the information flows). This representation or picture will be referred to as the design process model (DPM).
The role of data flow diagrams within the design process model
In software development various methodologies are used to build up a picture, graph or diagram of the observed phenomena (Checkland and Scholes, 1990).
Many of these methodologies use a diagramatic technique called data flow diagrams (DFDs). A preliminary study found this type of representation to be well suited to design modelling (Gharib, 1991) and this was confirmed in a later study by Newton (1992). A DFD, as described by De Marco (1979), is constructed from four basic elements : a data (or information flow), a process, a data store and an external source (or sink). These elements are briefly described in Table 1. Explanations and contrasts are given of their original meanings in terms of software development and in the modified context of modelling the building design process. Detailed accounts of the data flow diagram technique are given by De Marco (1979) and Fisher and Lin (1992).
The DFD technique has many characteristics which make it an appropriate tool to model a system consisting of processes or tasks linked by interfaces, i.e. a design process (S. Austin, A. Baldwin and A. Newton, submitted). Three of the most important ones are:
DFDs are hierarchical in nature;
DFDs are not concerned with how processes are performed;
DFDs view systems from an information point of view.
Figure 2 shows the structure of a design process model. Each box represents a data flow diagram. Those boxes shaded within the structure are shown as DFDs in Fig. 3. Each DFD is normally restricted to a page of A4 size paper, producing a compact, multidimensional

The top of the model represents the design process in the most general of terms with the level of detail increasing towards the bottom. This allows the higher regions of the model to be read to obtain an overview of the system and if more detail is required the lower levels can be studied as and where necessary.
Every design task shown in the DFDs is treated as a 'black box' (Addis, 1990). How each task performed is of no concern in the model; whether the solutions are obtained via a 'rule of thumb' or a full detailed analysis or whether performed by hand or by computer is of no interest. The DFDs map the information flowing into and out of each task. The design process model concentrates on the information processed by various design tasks and not how the information is processed or manipulated.
DFDs map the journey of information through a system, recording its transformations and its coordinations. DFDs do not impose or record any managerial control on the timing of the flow of information and, subsequently, do not dictate an order in which the tasks should be performed. This allows tasks within iterative cycles and the relevant mechanisms of information transfer to be modelled and understood without any preconceived ideas of order.
The aim of the design process model is to map the processes and information flows involved in the design of a building. The model must take account of the uniqueness of each building project if it is to be capable of forming the basis of a technique to plan information flows. This is no easy task and several assumptions have been introduced to make the modelling and, ultimately, the design process model, simpler.
It has been suggested that the building design process can be considered as two separate functions: design work and management work (Austin et al., 1993). Hollins et al., (1993) and Nijhuis (1993) have drawn similar conclusions in relation to product design. This philosophy is backed up by Munday (1979) who suggests that the poor performance of design falls into two categories. The first is the poor design of the building itself and the second the organizational failures which result in poor design.
The authors concur with this view and define management functions as activities that try to ensure that design work proceeds smoothly, i.e. ensuring the project is resourced, planned and managed effectively. These functions tend to be specific to individual projects and organizations and will not be modelled and therefore do not form part of the design process model.
This research has concentrated on the production of a model of design work. Design work is defined as the description of a solution within the client's constraints. The proposed model represents information flowing between and within each discipline's design tasks and is independent of the client's involvement and the way the project is managed and controlled. For example, foundation design always requires a knowledge of column loads and soil properties, whilst space heating requires information on room size, 'U' values and the internal external temperatures. Although parameters such as the magnitude and accuracy of the information changes from project to project and from building to building, the category of information does not.
Other assumptions have been made to keep the modelling manageable. All the information mapped in the model is assumed to be pre-emptive information, obviating the need to model questions, queries and both formal and informal requests for information. All information transfer is via the medium of paper or computer and therefore can be documented and recorded. It was deemed too time-consuming and confusing to try and model informal or formal oral communication. In order to keep the DFDs in the higher regions of the model as simple and as readable as possible it was necessary to group information in a hierarchical nature. For further details refer to Austin et al. (1993).
The uniqueness of individual projects must be captured in the design process model (DPM). This is done by introducing alternatives or options into the model. For instance a new building may require a steel structural frame rather than a concrete frame or may be comfort cooled rather than air-conditioned. Alternative design solutions such as these will be modelled separately as alternative design modules. A model for a new project can be constructed by selecting an appropriate permutation of modules and joining them into the basic framework. Selecting different alternatives will give rise to different information dependencies and will affect the planning and scheduling of the project.
Improved programming of the building design process
The DPM has led to an increased understanding of the information transfers occurring between tasks carried out by a multidisciplinary design team. The next step is to use this technique to plan the design phase of a building. As stated previously network analysis and bar charts have to handle tasks at the most general of levels of detail. However, these large tasks are composed of many smaller, highly interdependent, problems. Bar charts and network analysis are unable to cope with the level of abstraction and detail needed to plan the design phase of a project with any measure of success. Eppinger (1991) puts forward three possible sequences for two design tasks, shown in Fig. l. Coordinating the tasks in series and in parallel is straightforward. Both bar charts and network analysis can represent these types of sequence easily. However, the interdependent tasks are much more challenging to organize, often requiring much more time and many iterations of information transfer. The design phase of any building is principally composed of coupled design tasks. The previous two techniques examined are not sophisticated enough to represent these complex relationships, where information transfer is essential and iteration typical.
Design structure matrix analysis
One technique that can represent and analyse the coupling of design tasks is design structure matrix analysis. This technique was developed by Steward (1981) over 20 years ago and has recently received attention from Eppinger et al. (1990). This technique is used to aid concurrent engineering in the field of production engineering, where the product is designed simultaneously with the manufacturing process that will mass produce it. Both Steward (1981) and Eppinger (1991) apply this technique directly to the design process under consideration. This direct approach requires the design planner to have a detailed understanding of the information requirements of tasks likely to be performed. For a large, complex multidisciplinary process such as building design a detailed appreciation of the information transfers may not be possible. The design process model captures and represents this knowledge in an easily understood form. This is deemed essential to programme the design of a building successfully.
The application of design structure matrix analysis to
the design process model is most easily described via an example. Figure 4 shows a small, self-contained plant room containing electrical equipment. The environmental conditions in this room are maintained by an independent air handling unit. The design of this example will involve an input from civil, structural, mechanical and electrical engineers. The following discussion will show how the work of each of the disciplines can be coordinated and planned using a DFD model of the design process and matrix analysis to ensure the design proceeds in a logical and uninterrupted manner.
The data flow diagrams discussed earlier were drawn up to define the processes or tasks undertaken by each
A Ground floor calculations
C Foundation calculations
D Foundation drawings
M Brickwork wall details drawings
Electrical engineering discipline
P Electrical switchgear calculations Q Electrical switchgear drawings
discipline and the information transfers between them. The full structure of the design process model is shown in Fig. 2, with the parts of the model highlighted shown as DFDs in Fig. 3.
The activities at the lowest level of the model, i.e. the tasks that are not divided into subtasks, are of the most interest from a planning or scheduling point of view. These are called the functional primitive tasks (FPTs) and it is the coordination of these tasks, based on information flow, that requires study. Each FPT from the full model has been uniquely defined by a variable in the range 'A'—'Q' (see Table 2). This allows quick
Table 3 Precedence charts
determination of information dependencies, e.g. from Fig. 3 task K, 'mezzanine steelwork calculations', requires information from documents F, H and I which are FPTs elsewhere in the model. The source of each piece of information entering the FPTs would not normally be shown in a true DFD of the fashion De Marco (1979) describes. However, they have been included to emphasize and clarify the relationships between different FPTs in different parts of the model. A completed DFD model requires a data dictionary which allows the source of each information to be specified, removing the need to show the source of information in the diagrams.
The information dependencies for FPT can be represented via a precedence chart (Table 3) and in a matrix form, the first stage of design structure matrix analysis. Figure 5 shows the matrix for this example, in which each FPT is represented by an identically labelled row and column. Within the body of the matrix a mark in row i column j represents an information dependency for row i from column j. The marks in row K denote that task K requires information from task F, H and I before it can be undertaken.
If the tasks were carried out in the order of A through to Q, i.e. from the top left hand corner of the matrix, it would be desirable for all information required by each task to have already been generated by the completion of a preceding task. It can be quickly seen that this is not the case for some of the tasks. Task B, for instance, requires information from tasks A, E, H and Q. However, only information from task A has been made available. To complete task B directly would require an estimate of the information likely to be produced by tasks E, H and Q. Information estimates are essential for all the tasks in the matrix that have a mark (i.e. an

information need) above the leading diagonal of the matrix. If all the tasks were reordered in such a way that the matrix was lower triangular, i.e. all the marks fall below the leading diagonal, then proceeding in this order, all the design tasks could effectively be determined consecutively. This reordering is achieved by partitioning the matrix, which is the next step in design structure matrix analysis.
Partitioning the matrix
Partitioning the matrix is a technique to assist in reordering the design tasks to confine the information requests to appear below the diagonal of the matrix. This will not be possible with all the interdependent or coupled tasks which will still have some marks above the diagonal. Coupled tasks should be ordered so that their marks sit within a block astride the diagonal. Partitioning aims to manipulate these blocks so that their number and size are kept to a minimum, thus reducing the size of the iterations required and therefore the duration of the design phase.
Figure 6 shows the partitioned matrix resulting from reordering the tasks in the matrix shown in Fig. 5. It can be seen that tasks P, H, M, K, L, F and I are coupled. This block of tasks must be undertaken together either iteratively or by negotiation. The remaining blocks are not interdependent and can be performed in the order shown either in sequence or in parallel.
Much of building design work is iterative. A group of coupled tasks will require information to be estimated so
Figure 6 Partitioned matrix
that results or solutions can be obtained. Once a set of coupled tasks have been completed the validity of the initial estimates is checked and if necessary a new estimate made and the process repeated. This procedure continues until the result is deemed satisfactory. Greater economy in terms of time and cost can be gained if the accuracy and position of the estimated information is optimized, allowing quicker convergence towards a solution. Steward (1991) calls this technique tearing the matrix to choose the most effcient place to start iterative processes.
Matrix tearing
Matrix tearing is the analysis of coupled tasks to produce a more expeditious solution. Certain pieces of information are removed (or torn) from the circuit and the matrix repartitioned to leave no marks above the diagonal. Steward (1991) uses an analytical technique, called shunt diagrams, to study the most effective place to perform tears. However, for building design the decisions can be made by studying the semantics of the model and then making engineering judgements on the best place to tear information. A mark in the matrix representing an information request does not tell the engineer or design planner of the nature of the information request or indeed the number of information requests. The design process model portrays these facts, facilitating the judgement of the engineer. The only information requests that require studying in the model are those within the circuit of coupled tasks and judgement and experience will be needed to assess the sensitivity of the information requests. For this ex-
Figure 7 Matrix showing proposed tears
ample, two classifications of information sensitivity have been drawn up; insensitive and sensitive information. Insensitive information is defined as being easily and accurately estimated or not having a significant affect on the process into which it flows. Sensitive information is the opposite of this. Targeting insensitive information allows a quicker resolution of coupled tasks.
By studying the circuit of information flows in Fig. 6 in conjunction with the corresponding sections of the DPM, insensitive information can be identified and highlighted. It should be noted that these tears may occur above or below the diagonal in the circuit. This is shown in Fig. 7. Task K is dependent on three pieces of information from task F (AHU weight and position), task H (size of holes in floor required for ducts) and task I (slab thickness). It is deemed that information from task H is relatively insensitive as the exact size of the hole will not drastically affect the steelwork positions and that the information from task I can be estimated with a fair degree of accuracy and confidence. These two pieces of information may be torn from the matrix if necessary. Further possible tears have been identified and are also shown in the matrix.
The circuit is then reordered or repartitioned so that only 'tearable' information is shown above the diagonal. Any possible tears that fall below the diagonal will not need to be guessed or estimated as the information will have already been produced. The fully ordered set of tasks are shown in Fig. 8. This is deemed the most effective order to perform these coupled task to obtain a solution. Once the task at the end of the circuit has been completed it will be necessary to check the validity of all estimated information in the circuit and if necessary repeat the tasks with revised estimates. By highlighting
Figure 8 Fully ordered matrix

A Coupled Task
the suitable places to estimate information the number of iterations required will be kept to a minimum.
The matrix in Fig. 8 displays the optimum order in which the tasks in the design of the plant room example should be completed to ensure all information is available when required. This order has been decided upon by considering cross-discipline information flow and where necessary considering the most suitable place to estimate information to break iterative cycles. This preferred order is shown in a diagrammatic form on a discipline by discipline basis in Fig. 9. The crossdiscipline dependencies are also shown. This representation of the design logic bears a close resemblance to a network, obtained from network analysis, however, the work involved in producing this order has come to terms with the complexities and feedbacks in the design work that straightforward network analysis ignores. The tasks within the untorn circuit are highlighted on the network. It is suggested that cross-disciplinary design
reviews are conducted at this point to validate the estimated information and to decide on the required reiteration of any of the tasks.
It is envisaged that Fig. 9 can act as a precursor to the application of a standard project management technique such as PERT or the critical path method to produce a fully developed engineering schedule. This requires estimates of task duration and the number of design iterations between coupled tasks. An accurate and workable design programme would be a major asset in planning and managing the design phase.
Current research work
A small design example has been used in this paper to demonstrate a research methodology that can unravel some of the complexities of the design process. This can lead to a compressed design schedule and easier managerial control of the building design process. This methodology has also been shown to work on larger schemes involving 50 functional primitive tasks.
The next step, currently being undertaken, is to analyse a previously completed project and compare the optimum task order with what actually happened. Following the completion of this validation the methodology will then be tested on live projects.
The long-term aim of this research is to develop this methodology into a practical and useful tool that a design manager could use on any building project. The research programme at Loughborough is currently investigating the following areas of the methodology with this long-term aim in mind.
Development of the design process model
The current design process model is a paper-based model. A CASE tool is now being used to create the DFD within the design process model. A separate project is concerned with transforming this model into a dynamic model using simulation software.
Partitioning matrices
Partitioning large matrices can be very time-consuming and is best performed by computer. Generic algorithms exist to perform this task but will require tailoring to deal with the multidisciplinary nature of the building process and will need to take account of the interface of design and construction in fast-track projects.
Tearing matrices
The sensitivity of information in the design process model needs assessing in a formal and structured manner to aid the tearing process. It is envisaged that this will result in a form of sensitivity model, which will assign values to the sensitivity of each piece of information both for estimating (pre-tender) and detail (posttender) design. Work is currently being undertaken to examine the possibility of storing the sensitivity of the information flows in the data dictionary of the DPM. This will allow the partitioning to order the tasks in most effcient order automatically and obviate the need for any tearing procedures.
An algorithm is being developed to convert the fully partitioned matrices into a network form that may allow standard project management techniques such as PERT and CPM to be applied to develop multidiscipline design schedules based on coordinated information flows.
This paper has shown how two techniques from different engineering domains have been combined to produce a methodology, that can help in the organization and coordination of multidiscipline building design projects. A small example has been used to demonstrate the flexibility and power of this new approach which, unlike traditional planning techniques, is able to cope with the iterations involved in the design process.
The first step of the research was to build up a knowledge base of the tasks and information flows connected with the design of a building. This knowledge has been represented in a model using data flow diagrams. The structure of the model allows different types of building design methods to be considered, i.e. a steel versus a concrete frame or a comfort cooled building compared to an air-conditioned building. A model for each unique project can be formulated by choosing the relevant modules of design options and adding them to the basic framework of the DPM. This model is then analysed using design structure matrix analysis. This technique suggests the most the effcient order in which design tasks should be performed and is based on cross-discipline information flow. Where iterative cycles occur, studying the data flow model allows an engineer to judge the most suitable place to estimate information and initiate the solution of circuits of coupled tasks.
