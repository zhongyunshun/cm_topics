Scheduling system for high rise building construction
To cite this article: David Arditi , Pirasak Sikangwan & Onur B. Tokdemir (2002) Scheduling system for high rise building construction, Construction Management & Economics, 20: 4, 353-364, DOI: 10.1080/01446190210131647
To link to this article:
Full Terms & Conditions of access and use can be found at
Construction Management and Economics (2002) 20, 353–364
Scheduling system for high rise building construction
DAVID ARDITI1*, PIRASAK SIKANGWAN2 and ONUR B. TOKDEMIR3
1Illinois Institute of Technology, Department of Civil and Architectural Engineering, Chicago, IL 60616, USA
2Ministry of Defense, Sanamchai Road, Pranakon District, Bangkok 10200, Thailand
3The Rise Group, 120 S. LaSalle, Suite 1750, Chicago, IL 60603, USA
Received 14 September 2001; accepted 11 February 2002
A computerized system to schedule high-rise building construction has been developed using line-of-balance technology assisted by an expert system. A review of the recent literature on the techniques available for scheduling and controlling construction projects of a repetitive nature shows that Gantt charts are inadequate, and that there are serious problems with using network methods in such circumstances. There is evidence that the construction of high rise buildings has a decidedly repetitive nature but differs in some respects from other repetitive projects such as pipelines or pavement construction. Two new concepts have been introduced into line-of-balance methodology to accommodate the special conditions encountered in high rise building construction. These two concepts, namely ‘ exible’ unit networks and ‘multi-level’ LOB diagrams have been coded into a scheduling module (‘Lobplans’). A series of databases have been compiled regarding the productivity of resources. An expert system module (Lobex) has been developed to facilitate decision-making at network generation level. The scheduling module, the databases, and the expert system have been organized into an integrated system (Chriss) by means of communication and command routines that interface between the modules and the user input. A 16-storey building project has been used in testing Chriss’ performance. The integrated system proved to be user friendly and reliable.
Linear scheduling methods, line-of-balance, networks, high rise building construction, expert systems
Introduction
The success of a project depends heavily on how effective scheduling is and how tightly the project can be controlled. Poor scheduling can easily result in completion delays and cost overruns. These in turn result in claims, counter claims, disagreements, and disputes. The appropriate methods should be used in planning and scheduling a project; management decisions should not depend on experience and intuition alone.
High rise building construction is a type of repetitive construction where the same basic unit (typical  oor of building) is repeated several times. There is evidence that contractors avoid using Gantt charts and network schedules in highly repetitive projects because these projects are highly resource constrained in addi-
tion to being time constrained (Arditi and Albulak, 1986).
Gantt charts, the most commonly used method of scheduling and control in the construction industry, do not show interrelationships between the activities of a project. This problem is exacerbated as the project size and complexity increase. Construction managers who use Gantt charts have dif culties in changing or updating the data of a particular activity that may cause additional changes in other related activities. Accordingly, the task of identifying which activities need to be modi ed or updated can be frustrating. These shortcomings of Gantt charts are partially overcome if linked Gantt charts are used. The outcome then is a network-like schedule that can partially solve this problem in complex one-off projects (Harrison,
The mechanics of generating and updating
Gantt charts have improved considerably in the last
Construction Management and Economics
ISSN 0144–6193 print/ISSN 1466-433X online © 2002 Taylor & Francis Ltd
couple of decades as a result of recent developments in scheduling software. Indeed, the newest generation of commercially available scheduling software routinely generates Gantt charts that have actually been formulated as a result of CPM calculations. Some of these software packages may even let the scheduler update or adjust the schedule by making changes directly on the Gantt chart while the system interacts with the CPM module built into the system and makes sure that precedence relationships between activities are not overlooked in this process. Even though this new generation of Gantt charts appears to provide all the advantages of regular CPM networks, they certainly are not of much help in projects of a repetitive nature.
Network methods are very popular in larger projects, but present complications in projects of repetitive nature such as high rise building construction. CPMbased techniques have been criticized widely in the literature for their inability to model repetitive projects (Selinger, 1980; Reda, 1990; and Russell and Wong, 1993). The  rst problem is the sheer size of the network. In a repetitive project of n units, the network prepared for one unit has to be repeated n times and linked to the others; this results in a huge network that is dif cult to manage. This may cause dif culties in communication among the members of the construction management team. The second problem is that the CPM algorithm is designed primarily for optimizing project duration rather than dealing adequately with the special resource constraints of repetitive projects. Indeed, the CPM algorithm has no capability that would ensure a smooth procession of crews from unit to unit with no con ict and no idle time for workers and equipment. This leads to hiring and procurement problems in the  ow of labour and material during construction.
The line-of-balance method (LOB) is a powerful tool for scheduling and controlling a construction project that involves repetitive activities. Many researchers have dealt with various aspects of repetitive scheduling in construction (e.g. Hegazy et al., 1993; Moselhi and El-Rayes, 1993; Russell and Wong, 1993; Thabet and Beliveau, 1994; Hamerlink and Rowings, 1998; Harris and Ioannou, 1998; Mattila and Abraham, 1998; Wang and Huang, 1998; Ammar and Elbeltagi, 2001; Hamerlink, 2001), but LOB has been found to be dif cult to use on projects that require a large number of trades or operations. When applying the LOB method to high rise building construction, it is dif cult to show all the activities on one chart, especially in cases where concurrent activities exist. There is a need to modify the LOB technique to handle complicated activity relationships as well as concurrent activities. In addition, the input required is either dif cult to estimate (e.g. activity durations) or it involves considerable effort on the part of the user (e.g. production rate of each activity). There are also problems for a novice scheduler/young engineer in setting up a workable unit network for a typical  oor, to be used in the LOB method. Hence, there is a need for a modi ed LOB approach that will allow the user to organize the activities in a manageable way and that will eliminate the problems faced in recent attempts to computerize the process.
The objective of the study presented in this paper was to develop a reliable and easy-to-use computerized system that meets all the special requirements of projects of a repetitive nature and particularly of high rise building construction by combining line-of-balance technology with expert systems. The tasks in this endeavour include:
1. developing a scheduling system that incorporates the basic principles of line-of-balance, networks, and Gantt charts, and that ful ls all the repetition-related special requirements of high rise building construction;
2. acquiring knowledge of construction expertise on high rise building projects, and developing an expert system that can assist novice planners in scheduling and controlling these projects.
The computerized high rise integrated scheduling system (‘Chriss’) was developed as a response to the concerns expressed above. It uses the concept of integrating large databases with a knowledge-based expert system, using conventional programming along the way for traditional LOB calculations and for internal and external communication purposes.
The line-of-balance method
The line-of-balance (or LOB) method is a powerful tool for scheduling and controlling a construction project that involves repetitive activities. It was originally developed to improve the planning and control of manufacturing processes. The technique has been applied in construction projects involving repetitive sequences of activities such as high rise buildings, tunnels, roadways, and pipeline construction.
The basis of the technique is to  nd the required resources for each stage of construction so that the following stages are not interfered with and the target output is achieved (Harris and McCaffer, 1989). In other words, it can be considered a means for determining priorities for labour allocation of ‘dragging’ activities or for the slowing down or stoppage of ‘crowding’ activities, and diversion of their labour resources or crews to other activities (Halpin and Woodhead, 1976).
Even though LOB is a powerful tool, it can be dif cult to use on projects that require a large number of trades or operations. The problems arise from the dif culty of showing all the information on one chart, especially when monitoring progress (Halpin and Woodhead, 1976; Arditi and Albulak, 1986).
Line-of-balance concepts
The LOB concept is based on the knowledge of how many units must be completed on any day so that the programmed delivery of units can be achieved (Lumsden, 1968). Since the rate of delivery m is assumed to be constant, the relationship between the LOB quantity q and time t is linear. This is shown graphically in Figure 1 as the straight line
q = mt + c	(1) where c is the intercept on the Q axis. Another representation is:

After determining the number of crews for each activity, the scheduled rate of production can be computed. Then a diagram for each activity, which consists of two oblique and parallel lines, can be drawn in a system of coordinates where the x axis represents time and the y axis the number of units to be produced. The two lines denote the start and  nish times, respectively, of each activity in every unit, from the  rst to the last. Each activity will have its own two oblique and parallel lines, as shown in Figure 2: activities A, B, C, and D and ‘stage buffers’ between them. In order to achieve the optimum production, the scheduled rate of production of an activity must always be a multiple
Figure 1	Relationship between LOB quantities and time
of the activity’s natural rhythm. The natural rhythm of an activity is de ned as the optimum rate of production that a crew of optimum size will be able to achieve (Arditi, 1988). If an activity’s rate of production differs from a multiple of its natural rhythm, then idle time for labour and equipment will be inevitable.
Two new concepts for the LOB method
The concept of classical LOB is simple, but problems occur in high rise building construction projects where there are special logic limitations that do not apply in other types of repetitive project. For example, formwork crews in high rise building construction cannot proceed at a higher rate of production than the concrete crew; they cannot proceed at a lower rate either. Thus it is necessary to develop new methods to handle projects with large numbers of activities linked by complicated precedence relationships. These methods need to be simple enough to understand and implement, and they should produce the optimum solution.
In this study, two original concepts have been introduced and are used in the programming of Chriss and its LOB scheduling module, ‘Lobplans’. These two new concepts include (1) ‘ exible’ unit networks, and (2) ‘multi-level’ LOB diagrams. After testing the performance of Chriss, it was shown that these two new approaches had provided excellent bene ts in data preparation, network generation, network modi cation, and LOB scheduling, as well as in their associated Gantt charts.
The concept of ‘ exible’ unit networks
In the ‘ exible’ unit network concept, an activity can be moved forwards or backwards in time without additional cost, on the condition that it does not violate the precedence relationships between activities. The assumptions used in developing this concept are:
1. there are no changes in unit labour cost, unit equipment cost, and unit material cost during the time period in consideration;
2. the differential project overhead cost caused by dragging an activity such that it starts at a different time is so small in comparison to the total cost of the project that it may safely be neglected;
3. the precedence relationships between the activities are correctly stated and re ect the precedence relationships in actual construction.
Now consider the unit precedence diagram, Figure 3. For the sake of this example, say the precedence relationships are such that activity 5 has to start after activity 1 and  nish before activity 6, and that it can be constructed concurrently with activities 2, 3 and 4. It can be seen that activity 5 can be dragged to any position between the  nish time of activity 1 and the start time of activity 6 without any change in cost, since a forward movement of activity 5 eats up  oat but does not violate any precedence relationships. The cost of activity 5 will remain constant regardless of whether the activity starts at its earliest time or at any later time,  oat allowing, if the time value of money for short shifts is neglected.
By adjusting the location of an activity’s line-of-balance within the precedence and buffer constraints, it is therefore possible to obtain an optimum LOB schedule that also leads to a different network schedule (same activities, same durations, same precedence relationships, but different network  oats) for each  oor. In this modi ed version of the LOB method, the unit network is used to generate an LOB diagram as well as individual network schedules and their corresponding Gantt charts for each and every unit, whereas in the classical LOB method the unit network is used only to generate
an LOB diagram. The advantages of the ‘ exible’ unit network concept can be summarized as follows.
l It provides a set of network schedules, one for each unit. The scheduler can set up the buffer times suitable for the circumstances and the program will drag activities that have  oat in each unit’s network schedule just enough such that the LOB constraints are satis ed. In the unit network schedules, although some activities will be critical in some units, the same activities will enjoy  oats in some other units. It is the minimization of total project duration that causes critical conditions in the traditional CPM network, and thus critical conditions in the actual construction as well. The concept of a ‘ exible’ unit network allows the user to reduce or minimize the critical conditions in the unit network schedule associated with each  oor. This way, an activity does not have the same level of criticality in each  oor’s unit network schedule.
l It allows the user to replace a very large and complicated CPM network for the entirety of a repetitive construction project with a hierarchical series of simple but  exible unit network schedules for each  oor. These can be translated readily into Gantt charts for each  oor for better acceptance by site personnel.
l It provides a simple logic to computer programming (both in conventional and expert system programming) in that the programs can generate a set of ‘ exible’ unit network schedules readily with minimum input from the user. Once a preliminary unit network is generated, it also allows the user to modify the network until the user is totally satis ed.
l It provides associated Gantt charts for each unit so that the construction manager, subcontractors, and foremen can monitor all construction
Figure 3	Dragging an activity in a  exible unit network
Once the construction is closely monitored, problems can be detected and eliminated more expeditiously.
The concept of ‘multi-level’ LOB diagrams
A unit network is composed of three levels of activities that are used to represent the construction work at each  oor (Figure 4), main activities, subactivities, and sub-subactivities. Main activities are composed of subactivities, which in turn are composed of sub-subactivities. These activities may be independent or dependent on other activities. The performance of dependent activities is restricted due to reasons such as the construction method used, technical considerations,
Figure 4	Multi-level unit networks
and safety risks. The reason why this concept is labelled ‘multi-level’ is because it generates three levels of hierarchical networks, i.e. at main activity, subactivity, and sub-subactivity levels.
Sub-subactivities are used internally by ‘Lobplans’. There are three reasons for hiding the unit network of sub-subactivities from the user.
l There are 782 sub-subactivities listed in the ‘Sub-subactivity productivity knowledge source  le’. The user is spared the trouble of going through those very many and much detailed sub-subactivities to input sequencing preferences. This is done automatically by Chriss.
l The durations of sub-subactivities are small when compared with the durations of main activities or subactivities. The durations of subsubactivities range from a few hours to a maximum of 2 days.
l All the sub-subactivities are designed such that they can be performed concurrently with each other. Chriss calculates the durations of subactivities accordingly.
In summary, although the third level network of subsubactivities is internally generated by Chriss automatically, the user participates in the generation of the  rst level (main activity) and second level (subactivity) networks. The network generation process makes use of end-to-start relationships as well as concurrent relationships (i.e. start-to-start and end-to-end relationships) but excludes start-to-end relationships because start-to-end relationships were found to be redundant in this process. The possible alternatives in generating an LOB diagram are:
l Independent main activities and independent subactivities: these can proceed at rates of production that are totally unrelated to the rate of production of any other main activity or subactivity, respectively, as long as they do not violate the precedence relationships between them. The concept is shown graphically in Figure 5, where subactivities A1 and A2 are independent.
l Independent main activities and dependent subactivities: as in the previous case, independent main activities can proceed at rates of production that are totally unrelated to the rate of production of any other main activity as long as they do not violate the precedence relationships between them. On the other hand, a dependent subactivity cannot be performed at its own rate of production; its rate of production is governed by the rate of production of other subactivities that belong within the same main activity. Also, the sequencing of subactivities has to satisfy the precedence relationships of subactivities within the same main activity.
The phenomenon of dependent activities is encountered mostly in high rise building construction. The typical example of this kind of dependence is the sequence formwork–reinforcements–concrete. These three activities have to proceed at rates of production that are very close to each other and yet the precedence relationships have to be strictly adhered to. Otherwise, the project manager runs the risk of constructing formwork on the 8th  oor while the
concrete on the 4th  oor has yet to be poured. The concept is shown graphically in Figure 6, where the production rates of subactivities A1 and A2 are adjusted such that A1 does not start in a unit unless A2 has been completed. l Dependent main activities and dependent subactivities: a dependent main activity cannot be performed on the next  oor without the completion of other main activities on the same  oor. In this case, a dependent main activity cannot be performed at its own independent rate of production and will have to wait for the completion of other main activities on the same  oor. The sequencing of a dependent main activity will also have to follow the precedence relationships of all main activities in the project. Similarly, a dependent subactivity cannot be performed at its own rate of production; its rate of production is governed by the rate of production of other subactivities that belong within the same main activity. The sequencing of subactivities also has to satisfy the precedence relationships of subactivities within the same main activity. The concept is shown graphically in Figure 7.
For example, RC_COLUMN and RC_STAIR are independent main activities and consist of dependent sub-activities. EXTERIOR_WALL, INTERIOR_
TRICAL, HVAC and FINISHINGS are independent main activities and each consists of independent subactivities. Finally, RC_COLUMN, RC_BEAM, and RC_SLAB are dependent main activities and each consists of dependent subactivities.
Software con guration of Chriss
Figure 8 schematically represents the software con guration employed in Chriss, and consists of  ve main processing modules: the Construction Knowledge Input module, the Project-Information Input module, the Expert System module, the Construction Planning module, and the LOB Scheduling module. An expert system shell including Personal Consultant Plus and LISP was used for the development of the expert system module, and dBase was used to build the various databases. The C+ programming language was used to develop the LOB scheduling module, to build the user interfaces, and to link the modules together. These processing modules are linked together as shown in Fig. 8. Thus Chriss is a large computerized system that consists of 60 programs connected to each other in a complex network-like system. In addition, Chriss contains 130 database  les. A macro  ow chart expressing major work processing in Chriss is presented in Figure 9.
Construction knowledge input module
This module is used by the knowledge engineer who is responsible for developing the knowledge base of the expert system and the databases of high rise building construction. This module is composed of four parts.
(a) The Crew Composition Knowledge Source contains information about the composition of each crew type used in different activities.
Figure 8	Software con guration of Chriss
total of 37 trades (Table 1) and 29 types of equipment (Table 2) were selected from the masterformat of the Construction Speci cations Institute (Spradlin, 1986) as those mostly used in high rise building construction. Using different combinations of trades and equipment, 142 types of crew were developed that are used commonly in high rise building construction. Examples of crews included in this information base include:
D6 = CARP(0.25) + BRL(6)
Using the codes presented in Tables 1 and 2, crew A2 is composed of 2 labourers (L), 1 light truck driver (LTD) and 1 light truck (LT). Users can modify these crew compositions or add new compositions depending on their companies’ practices.
(b) The Sub-subactivity Productivity Knowledge
Source contains information about the descrip-
tion of sub-subactivities, their corresponding crews required for accomplishing construction work, and the daily productivity of these crews. This information is stored in a database  le that contains 782 records of sub-subactivities that are used in high rise building construction. These records were obtained from the masterformat of the Construction Speci cations Institute (Spradlin, 1986) as those mostly used in high rise building construction. Users of Chriss will of course have to adjust the productivity rates to re ect the performance of their own crews, depending on the quality of their workforce, the location of their project and the weather conditions.
(c) The Precedence Relationship Knowledge Source contains information about the precedence relationships between main activities and between subactivities. The sources of data included texts and publications related to construction methods and human experts in the construction business who were interviewed by Srigungvarl (1992). Note that the actual precedence relationships adopted by a construction company depend on several factors including the construction methods favoured by the company, the location of the project, the availability of quali ed labour and appropriate equipment. The precedence relationships stored in this knowledge base constitute simply a guideline that can be adopted as is or can be modi ed at will. The modi cation of the precedence relationships stored in this knowledge base is performed by the user interacting with an expert system described later in this section.
(d) The Construction Information Knowledge Source contains information about the composition of main-activities, as shown in Table 3, plus the composition of subactivities. The 782 sub-subactivities in the database are grouped into 37 subactivities, which in turn are grouped into 12 main activities. The composition of activities is not restricted only to those presented in Table 3. However, to introduce additional compositions, Chriss needs to be slightly modi ed.
Project information input module
This module is to be used by the user/scheduler who is responsible for the planning and scheduling of the high rise building construction. Referring to Figure 8, the user is expected to input information describing the desired project, a typical  oor, and the preferred method of construction (if any).
Figure 9	Macro  ow chart of Chriss Table 1	Trade worker types in crew database
Roofer, composition

Painter, ordinary

Chief of party

Rodman/chain man
Light equipment operator

Steam tter

The user is asked by Chriss, through a user inter-
GEPT	Gas engine power tool
Crane, 80 ton & tools
DT	Dump (heavy) truck

Crane, 90 ton

Sand blasting accessories
Paint sprayer
CB	Concrete bucket
Auger, truck mounted
TC	Truck crane
GWM	Gas welding machine
Table 2	Construction equipment types in crew database	face module, to input information that is then stored in the following databases.
(a) The Project Information Database includes the input information: project name, project code, location, owner’s name, date of start, date of completion, user’s name, number of typical  oors, number of working hours per day, number of working days per week, and start hour of working day.
(b) The Typical Floor Database describes in detail the construction work in a typical  oor of a high rise building. In preparation for the input session, the user is expected to be in possession of the existing take-off quantities of construction. The input process has several menu-driven alternatives. If the user selects a main activity, Chriss prompts a series of questions about the constituent subactivities. These data input by the user are recorded automatically into the relevant database  le of this particular project.
(c) The Construction Method Database includes the user’s preferences for performing construction works, i.e. construction sequence of main activities and that of subactivities. Chriss combines this data obtained from the user with the activity precedence data suggested by the expert system module. The integrated outcome of the two data sets forms the basis of information in
the generation of the unit network by the Construction Planning Module.
The Project Information Input Module can be used to simulate different situations. For example, the user can modify the unit network by changing the sequence of main activities, the sequence of subactivities, or crew assignments of sub-subactivities. As a result, the user can obtain several alternative schedules in little time. Different solutions can be compared in order to get the most desirable schedule with respect to individual project requirements.
The expert system module
This module called Lobex enables Chriss to generate not only the sequence of main activities and subactivities, but also a complete construction schedule for a typical  oor. The expert system considers the embedded knowledge sources and the desired precedence relationships preferred by the user. It applies the
Table 3	Composition of main activities in high rise building construction
Main activity
Main activity

Subactivity
Subactivity
Subactivity
Subactivity













rules in the knowledge base and then uses its inference mechanism to reach a set of feasible precedence relationships for the main activities and for the subactivities. The results are used by the Construction Planning module to generate a unit network.
The expert system module has three components: the inference engine, the context, and the knowledge base. The inference engine performs the task of deciding how and when facts and rules are to be applied to make decisions. An expert system shell called Personal Consultant Plus was chosen for this task. The context, also known as the working memory, contains the speci c problem data and intermediate-to- nal results produced by the expert system. In Chriss, the context receives several types of information, including precedence relationships, construction information knowledge, crew composition knowledge, sub-subactivity productivity knowledge, and also the information from the knowledge base through the inference engine. The expert system evaluates all relevant data in the context and produces a set of precedence relationships between group activities, and between component activities. The knowledge base consists of facts and rules. The expert system module of Chriss contains a knowledge base that is called ‘Hiriplan’ and consists of 86 rules and 4 meta rules.
Many construction methods are available for use in high rise building construction. The user is asked by Chriss to specify a preference concerning precedence relationships (end-to-start, start-to-start, and end-toend) when sequencing main activities and subactivities. Chriss also seeks information about how certain the user is of each of these preferences regarding precedence relationships. The user can assign certainty values to the precedence relationships that range from 2100 to +100. Chriss has a ‘help’ function that de nes these certainty values and therefore guides the user in this process. ‘Lobex’ is equipped with an intelligent interface operator that integrates the user’s certainty values and the precedence information stored in the Precedence Relationship Knowledge Source. The intelligent interface operator produces compromise values by factoring the user’s level of experience into the evaluation. ‘Lobex’ assigns less (for novice) or more (for expert) weight to the user’s certainty value when combining the user’s value with the precedence information stored in the knowledge base, which was compiled based on knowledge acquired from human experts in a series of interviews. If the precedence relationships suggested by the expert system are not acceptable to the user, the user is allowed to specify the exact relationships he/she prefers. The facility that lets the user override precedence decisions made by the expert system adds value to Chriss.
Construction planning module
This module receives the integrated result of the expert system regarding the precedence relationships among the main activities and among the sub- activities. These precedence relationships are used by the Unit Network Component of this module to generate a unit network for main activities together with individual unit networks for subactivities within each main activity. Another function of this module is to calculate the estimated durations of subactivities and main activities using the Activity Duration Component.
The LOB scheduling module
The LOB Scheduling Module is called ‘Lobplans’ (LOB planning and scheduling), and is the module that receives input data from the Construction Planning Module in order to generate an LOB schedule for the project. The planned start and  nish times of all main activities and subactivities are generated by this module that performs LOB analysis. The LOB schedule is then transformed by ‘Lobplans’ into  exible unit network schedules and Gantt charts for each unit. The user reviews this information, and is asked by Chriss whether the user wishes to continue or to modify the crew assignments and/or the precedence relationships in the unit network. If a modi cation needs to be made, the control of the program is transferred back to the Construction Planning Module, which recalculates a new unit network and new values for activity durations. Then, ‘Lobplans’ is called again for rescheduling the construction work. This procedure is repeated until the solution is acceptable to the user.

The main objective of this research was the development of a computerized system that uses the LOB technology assisted by an expert system to schedule high rise building construction. The development of Chriss provides the opportunity for a novice planner to generate a construction schedule for a high rise building project. This may be achieved using Chriss, thanks to the knowledge embedded in the expert system module ‘Lobex’, which refers to several knowledge sources of how activities are related to one another. The knowledge base called ‘Hiriplan’ contains 87 production rules that form the basic knowledge of how to evaluate precedence relationships. ‘Hiriplan’ also integrates the certainty values input by the user with the information stored in the knowledge base. This knowledge is used in the generation of unit networks.
The two original concepts,  exible unit networks and multi-level LOB diagrams, are embedded in Chriss and allow LOBs to be used in high rise building projects that display special characteristics. The LOB scheduling module ‘Lobplans’ considers three levels of unit networks and hence is able to produce multi-level LOB schedules. The  rst level involves main activities and the second level concerns subactivities. These two unit networks can be modi ed by the user based on the user’s preference of precedence relationships. The third level involves sub-subactivities and Chriss and ‘Lobex’ perform all calculations in the third level without seeking user input. Also, Chriss produces optimum solutions in the sense that resources are used as ef ciently as possible, because the LOB algorithm used minimizes idle time and therefore costs. Chriss produces a set of  exible unit networks for the  oors of a high rise building; these unit networks are based on the same precedence relationships and activity durations, but activities may end up having different  oat values depending on the  oor they concern.
Chriss has been tested using different scenarios, including extreme cases, and has produced workable schedules each time. CHRISS may be developed further by adding the capability to handle steel structures and steel reinforced concrete structures. However, it should be pointed out that the development of a complex system of the type presented in this paper requires the acquisition of a tremendous amount of knowledge. It is almost impossible to build a system that contains all available knowledge at  rst development. Nevertheless, knowledge can be accumulated and input into the knowledge base as projects are completed.
Chriss is a prototype, a proof of concept that is operational. Its purpose is not to replace human decisionmaking but to assist users with scheduling decisions in a repetitive environment.
