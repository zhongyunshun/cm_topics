Optimizing multi-mode time-cost-quality trade-off of construction project using opposition multiple objective difference evolution
To cite this article: Duc-Long Luong, Duc-Hoc Tran & Phong Thanh Nguyen (2021) Optimizing multi-mode time-cost-quality trade-off of construction project using opposition multiple objective difference evolution, International Journal of Construction Management, 21: 3, 271-283, DOI: 10.1080/15623599.2018.1526630
To link to this article:
Full Terms & Conditions of access and use can be found at
Optimizing multi-mode time-cost-quality trade-off of construction project using opposition multiple objective difference evolution
Department of Construction Engineering and Management, Ho Chi Minh City University of Technology, Ho Chi Minh City, Vietnam;
b Department of Project Management, Faculty of Civil Engineering, Ho Chi Minh City Open University, Ho Chi Minh City, Vietnam
The time, cost and quality are crucial, conflicting aspects to construction project management. Tradeoff optimization among project duration (time), project cost, and the project quality within the project scope is necessary to enhance overall construction project benefit. A novel optimization algorithm, Opposition-based Multiple Objective Differential Evolution (OMODE), is presented to solve the time-cost-quality tradeoff (TCQT) problem. This novel algorithm employs an opposition-based learning technique for population initialization and for generation jumping. Opposition numbers are used to improve the exploration and convergence performance of the optimization process. A numerical high-way construction project case study is analyzed to illustrate the use of the algorithm and demonstrate its capabilities in generating non-dominated solutions. Comparisons with non-dominated sorting genetic algorithm (NSGA-II), multiple objective particle swarm optimization (MOPSO), multiple objective differential evolution (MODE) and previous results verify the efficiency and effectiveness of the proposed algorithm. This study is expected to provide an alternative solving methodology for the TCQT problem and help project manager plan construction methods with optimal time-cost-quality tradeoff.
Construction management; time-cost-quality tradeoff; multi-objective analysis; opposition; differential evolution
Introduction
In today’s competitive business environment, companies cannot survive without efficiently planning and scheduling. Resource management is a crucial part of project planning of any company. Time and Cost are two essential factors in construction project planning (Zahraie and Tavakolan 2009). In general, less expensive resources or technologies would result in longer project duration. For instance, using productive resources or technologies may save time, but this causes an increase in the cost. On the other hand, reduction of either time or cost may decrease quality of construction projects. Consequently, the relevant construction projects such as highways, tunnels, and bridges may age or deteriorate faster than expected, increasing the maintenance and rehabilitation cost (Zhang and Xing 2010). A time, cost and quality trade-off problem (TCQTP) is an extension of the time cost trade-off problem. This problem assumes that all project activities can be accomplished in the different modes of cost, time, and quality. The overall goal in TCQTPs is to select each activity’s mode such that the project can meet the deadline with the minimum possible cost and the maximum achievable quality. TCQTPs are NP-hard problems because the time, cost, and quality objectives are in conflict with each other (Khalili-Damghani et al. 2015).
2018 Informa UK Limited, trading as Taylor & Francis Group
Construction projects are built with a complex technology, open-air work environment, tight constraints of time and cost, and thus the accidents due to poor quality and safety occurred frequently (Fu and Zhang 2014). It is considerably significant to ensure project quality and safety under the construction time, cost and other constraints. Understanding the ability to minimize time, cost and improve quality of a project could determine the level of success of a construction company. Researchers have established various models and applied many different methods to reach time-cost-quality tradeoff from previous research works of the literature. Methodologies applied to optimize TCTQP are classified into mathematical methods (Babu and Suresh 1996; Khang and Myint 1999) and metaheuristic models (Kim et al. 2012; Tareghian and Taheri 2007). Heuristics are approximate rules-of-thumb, developed using problem-specific information, and tend to easily get trapped at local optima (Tareghian and Taheri 2006; Wood 2017). Evolutionary algorithms applied to TCQTP also including genetic algorithms (El-Rayes and Kandil 2005) ant colony ant algorithm (Das and Suganthan 2011) and artificial bee colony (Tran et al. 2015). Some evolutionary and other algorithms are configured to also evaluate TCQTP, considering limited availability of resources (Khalili-Damghani et al. 2015), or including more objectives (Tran et al. 2017).
Differential Evolution (DE) is currently one of the most popular evolutionary algorithms. DE may be used in a wide variety of highly nonlinear and complex optimization problems. This algorithm is simply structured and easy to use, while demonstrating great robustness and fast convergence in solving single objective global optimization problems (Price et al. 2005; Storn and Price 1997; Zheng et al. 2013). In light of these advantages, several researchers have applied DE to solve multi-objective problems (Das and Suganthan 2011; Zhou et al. 2011), with superior performance to other multiple objective algorithms widely reported and verified (Ali et al. 2012; Reddy and Kumar 2007; Wu et al. 2010). Therefore, this paper applies the DE algorithm in a model designed to solve the TCQT problem.
Based on the above, this study developed the novel Opposition Multiple Objective Differential Evolution (OMODE) algorithm to facilitate a TCQT analysis. In line with classical DE, this proposed algorithm applies an opposition-based learning technique for both population initialization and generation jumping. Opposition numbers are used to improve the exploration and convergence capabilities of optimization process. The objective is to demonstrate that the proposed algorithm attains fast convergence without losing solution diversity on the Pareto front. In the remaining parts of this paper, the related works and formulation on time-cost-quality tradeoff problem are presented. In the next section, the detailed descriptions of the proposed optimization model for the TCQT problem are presented in details. Subsequently, the performance of the newly developed model is demonstrated using a numerical case study and result comparisons. The final section presents conclusions and suggestions for future work.
Related works on project time-costquality problem
Many methodologies have been proposed to solve the time-cost tradeoff (TCT) problem by deciding an optimal combination of construction methods for all the activities (Ogunsemi and Jagboro 2006; Zhang and Li 2010). Analytical methods use mathematical approaches such as linear and dynamic programming to solve problems (Burns et al. 1996; De et al. 1995; Jiang and Zhu 2010). The meta-heuristic approaches have shown relatively higher efficiency in this domain. Although such solutions do not necessarily guarantee the global optimal solution, their ability to search a solution space intelligently rather than completely makes them capable of producing relatively good solutions to large-scale problems (Kalhor et al. 2011). Li et al. (1999) proposed the application of genetic algorithms (GAs) and Pareto front approach to solve TCT problems. Yang (2007) developed a new algorithm using particle swarm optimization (PSO) to deal with time cost tradeoffs. Ng and Zhang (2008), Afshar et al. (2009) presented a Pareto-based multi-objective ant colony optimization
(ACO) for TCT problems. Bettemir and Talat Birgon€ ul (€ 2017) based network analysis algorithm for the solution of discrete time-cost Trade-off Problem. Nabipoor et al. (2013) used an adjusted fuzzy dominance genetic algorithm to deal with multi-mode resource-constrained discrete time–cost tradeoff problem.
Trade-off during the project planning is not limited to time and cost. Therefore, variants of time-cost trade-off problem are also analyzed. Conducting sufficient analysis and multi-objective optimization of projects’ time-cost-quality tradeoffs are therefore an essential requirement in the effective planning of all construction projects of any size. Babu and Suresh (1996) proposed a framework to study the tradeoff among time, cost, and quality for the first time using three inter-related linear programming models. Then Khang and Myint (1999) applied Babu’s method in a cement factory construction project and verified the validity of the method. Attempting to use multiple objective evolutionary algorithms, El-Rayes and Kandil (2005) presented a multi-objective model to search for an optimal resource utilization plan that minimizes construction cost and time while maximizing its quality jointly, applied genetic algorithm (GA) to provide the capability of quantifying and considering quality, and visualized optimal tradeoffs among construction time, cost, and quality by a highway construction example. Zhang and Xing (2010) indicated that time, cost, and especially quality were difficult to describe by precise numbers; therefore, they proposed a Pareto-based multi-objective Particle Swarm Optimization (PSO) for the fuzzy TCQT problem. Tran et al. (2015) successfully used the hybridization evolutionary algorithms to solve the time-costquality tradeoff problem. Khalili-Damghani et al. (2015) modeled a multi-mode time–cost–quality trade-off project scheduling problem under generalized precedence relations using mixed-integer mathematical programming. Kazaz et al. (2016) outline a new two-step methodology for TCQ trade-off problems. Wood (2017) analyzed stochastic duration-costquality tradeoff problems with fuzzy memetic optimization algorithm.
The objectives faced by a project manager are to minimize the overall time and cost and maximize the overall quality of the project. The problem is then to select an optimal combination of construction methods for all activities in order to arrive at an optimal compromise among time, cost and quality for the project. Three major objective functions are formularized in the following to enable the evaluation of project performance in construction time, cost and quality, respectively (El-Rayes and Kandil 2005).
The first objective, minimization of total project duration, may be expressed as follows:
all predecessors j of i
where Ti is duration of the activity ifi ¼ 1; lg on the critical path for a specific option of execution methods; l is the total number of critical activities on a specific critical path. ESi is the earliest start of activity i, di is the duration of activity i. In this study, project duration is estimated based on the procedure used by El-Rayes and Moselhi (2001). In general, project duration is calculated based on precedence constraints and activity duration. The project information determines the precedence constraints and the selection alternatives determine activity duration.
The second objective, minimization of total project cost, may be calculated as follows:
where cos ti is the cost of activity i for a specific option of execution methods and n is the total number of activities.
The third, which is also the last objective to be considered, is the maximization of project’s overall quality. The project quality value is equal to the sum of all activities’ quality. Therefore, the value of this objective is expressed as following equation:
k is performance of quality indicator (k) in activity (i) using resource utilization (n); k is weight of quality indicator (k) compared to other indicators in activity (i); and wtiis weight of activity (i) compared to other activities in the project. Normally, in an activity has several indicators such as material, equipment, labor, etc … that effect its quality. Each indicator has a weight which impact to activity quality. For example, an activity has three indicators with quality performance as 90; 95, respectively. The corresponding weights of quality indicator are 50%; The weight of activity in total project is 0.03 (3%). Therefore, the quality of activity is calculated as [(9050%þ80 30%þ9520)]0.03 ¼ 2.64.
Differential evolution (DE) is a simple populationbased, direct-search method used to solve global optimization problems (Price et al. 2005; Storn and Price 1997). DE procedures are similar to the genetic algorithm (GA), as both use mutation, crossover, and selection processes. However, the nature of the mutation process used in the DE distinguishes this method from the GA. The DE mutation process selects three random solutions from the previous generation to create a mutant solution. The original DE algorithm is described briefly as follows:
Let S  Rn be the search space of the problem under consideration. DE utilizes NP and D-dimensional parameter vectors Xi; NP as a population for each algorithm generation. The initial population is generated randomly and should cover the entire parameter space. At each generation, DE applies two operators, namely mutation and crossover (recombination) to yield one trial vector Ui; Gþ1 for each target vector Xi; G. Then, a selection phase takes place to determine whether the trial vector enters the population of the next generation or not. For each target vector Xi; G, a mutant vector Vi; Gþ1 is determined using the following equation.
G þ F Xð r2; GÞ (4) where, r1; NPg are randomly selected such that r1 6¼ r2 6¼ r3 6¼ i, and F is a scaling factor such that F 2 ½0;
Following the mutation phase, the crossover operator is applied to increase the diversity.
mutant vector2	; Gþis generated using the following1, a trial vector Ui; Gþ1 ¼ fui1; Gþ1 scheme.
1 is a user-defined crossover constant; jrand is a randomly chosen index from f1; Dg that ensures trail vector Ui; Gþ1 differs from its target Xi; G by at least one parameter.
To decide whether the trial vector Ui; Gþ1 should be a member of the population in the next generation, it is compared to the corresponding target vector Xi; G using the greedy criterion. The selection operator is expressed as follows:
Once the memberships of the next generation are selected, the evolutionary cycle of the DE iterates until a stopping condition is satisfied.
Opposition-based learning
Opposition-based strategy in the optimization algorithms uses the concept of opposition-based learning (OBL), introduced by Tizhoosh (2005). The main idea behind OBL is the simultaneous consideration of an estimate and its corresponding opposition estimate (i.e., guess and opposition guess) in order to achieve a better approximation of the current candidate solution. In the absence of a priori information about the solution, we usually start with random guesses. The computation time, among others, is related to the distance of these initial guesses from the optimal solution. We may improve our chance of starting with a closer (fitter) solution by simultaneously checking the opposite solution. By doing this the fitter one (guess or opposition guess) may be chosen as an initial solution. In fact, according to probability theory, a guess will be further from the solution than its opposite guess 50% of the time. Therefore, starting with the closer of the two guesses (as judged by its fitness) has the potential to accelerate convergence. The same approach can be applied not only to initial solutions, but also continuously to each solution in the current population (Ahandani and Alavi-Rad 2012; Rahnamayan et al. 2008).
The proposed opposition based multiple objective differential evolution for time-costquality tradeoff model (OMODE-TCQ)
This section describes the opposition-based multiple objective differential evolution (OMODE) for solving the TCQT problem developed in this study based on the original DE algorithm (Storn and , Price, 1997; Price et al., 2005). In OMODE, potential candidate solutions are addressed at initialization and the exploration and exploitation capabilities during various optimization processes are mainly concerned. OBL may be used in two stages of MODE. Firstly, in the initialization stage in order to achieve fitter staring candidate solutions under conditions in which a priori knowledge about initial members does not exist; Secondly, during MODE implementation in order to force the current population to jump into new candidate solutions that are fitter than current ones. These two stages are named as opposition-based population initialization and opposition-based generation jumping, respectively (Ahandani et al. 2010; Ahandani and Alavi-Rad 2012; Rahnamayan et al. 2008). In this way the proposed algorithm can converge faster while maintaining good diversity. Figure 1 shows the overall operational architecture of the proposed algorithm.
Opposition-based population initialization
This study considers the TCQT problem, in which project cost, project duration, and project quality are optimized simultaneously. The model requires project information inputs including activity relationship, activity duration, and construction methods for each activity. In addition, the user also must provide parameter settings for the search engine (OMODE) such
OMODE flowchart for the TCQT problem.
as the value of population size NP, number of decision variables D, number of objective functions M, value of the mutant constant F, value of the crossover probability constant CR, maximum number of generations Gmax, the lower bound (LB) of decision variables, and the upper bound (UB) of decision variables. With these inputs, the optimizer conducts calculations to obtain an optimal set of construction methods for all construction project activities. With all the necessary information provided, the model is capable of operating automatically without any human intervention.
Population initialization is the first and the primary task in any evolutionary algorithm. The population in the DE may be guided toward more promising areas if the initial population can be spread as much as possible over the objective function surface. Hence, incorporating OBL into DE is worth investigating. In OMODE, a combined initial population of 2NP solutions is generated using uniform random distribution and the OBL technique.
The above process generates a point in D-dimensional space X ¼ fx1; xDg in which x1; xD 2 R and xj 2 ½0; 1 have uniform random distributions and its corresponding opposite point Xo ¼ fx1o; xDo g is created as xjo ¼ 1xj. The first NP individuals may be easily generated as follows:
An opposition-based learning approach then generates other NP solutions according to the following equation.
A candidate solution to the TCQT problems may be represented as a vector with D elements as follows:
D (9) where D is the number of decision variables in the problem at hand. It is obvious that D is also the number of activities in the project network. Index i denotes the ith individual in the population. Vector Xi,j represents one construction method for activity j. Construction method Xi,j is an integer number in the range [1,Mj] (j¼ 1 to D), meaning one position from Mj construction methods. Because the original DE operates with real-value variables, a function is employed to convert the construction method options of those activities from real values to integer values within the feasible domain.
j is the option of activity j at the individual ith. rand½0; 1 denotes a number between 0 and 1 generated by uniformly distributed random and opposition learning techniques. UB(j) ¼Mj represents the number of construction methods for each activity. Ceil is a function to round a real number to the nearest integer greater than or equal to it.
Population selection procedure
During the optimization process, size of population remains NP (Storn and Price 1997). NP best (elite) solutions are selected from the combined population. While the “highest fitness value” solution is the best solution in the single objective solution scenario, a two-solution dominance approach is used in multiobjective scenarios. Thus, the NP solutions in this research are selected using fast non-dominated sorting (Deb et al. 2002) and the entropy crowding technique (Wang et al. 2010). Figure 2 provides an overview of this procedure.
The solutions belonging to the best non-dominated set (Set F1) are selected first. If size of F1 is smaller than NP, the remaining members of the population are chosen from subsequent non-dominated fronts in rank order (F2, F3 … ). This procedure is continued until additional sets cannot be accommodated. Assume that Fk is the last non-dominated set able to be accommodated. In general, number of solutions in all sets F1 through Fk will be greater than NP. In order to use crowding entropy sorting to choose the NP population members needed to select the best solutions, it is necessary to first fill all population slots in descending order of distance.
Once initialized, DE mutates the population to produce a set of mutant vectors. A mutated vector Vi; Gþ1 is created using Eq. (4) that corresponds to the target vector Xi;
The crossover operation exchanges components of the target vector and the mutant vector to diversify the current population. In this stage, a new vector called the trial vector, is created using Eq. (5).
Selection operation
Modification of the selection mechanism is the most important task of multi-objective optimization because the careful selection of candidate solutions facilitates the generation of a good Pareto front.
This research utilized a selection mechanism proposed by Ali et al. (2012). This mechanism first evaluates the trial vector Ui; Gþ1 and then compares it with the target vector Xi; G. If the trial vector dominates the target solution, it replaces the target solution immediately in the current population and the target solution is added to another (advanced) solution. Otherwise, the new solution (trial solution) is added to the advanced population. The two populations (current and advanced) are combined after each generation. Note that the total size of the combined population is 2NP. However, population size during the optimization process remains NP. Thus, NP solutions are selected based on the same technique presented in the Population selection procedure section.
Opposition-based generation jumping
In this stage, if jumping condition Jr is satisfied RandðÞ  ðGmaxg Þ2 þ 2ðGmaxg Þ where g and Gmax are the current and maximum generations, respectively, then the corresponding opposition population is computed and the Npop fittest individuals are chosen from the combined current and opposition population after generating new populations through DE evolution. Unlike the process in the opposition-based initialization phase, generation jumping calculates the opposition population dynamically. Instead of using variables’ predefined interval boundaries ([LBj, UBj]), generation jumping calculates the opposite of each variable based on minimum (Minpj ) and maximum (Maxjp) values for that variable in the current population.
By staying within variables’ interval static boundaries, we jump outside of the already shrunken search space and lose the knowledge of the current reduced space (converged population). Hence, we calculate opposite points by using the current interval of variables in the population which is, as the search progresses, increasingly smaller than the corresponding initial range (Rahnamayan et al. 2008).
Stopping conditions
The optimization process terminates when the stopping conditions are met. The user can set the type of these conditions. Maximum generation Gmax or maximum number of functions evaluations (NFE) may be used as the stopping criterion. When the optimization process terminates, the final set of optimal solutions, called the Pareto front, is presented to the user. Obtaining the entire Pareto front is of great importance because it assists planners to evaluate the pros and cons of each potential solution based on qualitative and experience-driven considerations.
This study analyzed a numerical case to demonstrate the effectiveness of the proposed OMODE for the TCQT problem, with obtained results compared against three approaches frequently employed to handle the TCQT problem, including NSGA-II, MOPSO, and MODE. The NSGA-II algorithm has been demonstrated to be one of the efficient algorithms for solving benchmark multi-objective optimization problems (Ramesh et al. 2012). The NSGA-II algorithm is successfully applied in various construction problems such as resource utilization (Zahraie and Tavakolan 2009), scheduling (Shahriari 2016; Zeng et al. 2018). The particle swarm optimization is an adaptive evolution algorithm based on population search, the thought comes to the prey behavior of birds, and its advantages is simple and fast convergence. The MOPSO is a very competitive swarm intelligence algorithm for multi-objective optimization problems including construction management (Aminbakhsh and Sonmez 2017; Elbeltagi et al. 2016). The MODE is a powerful and effective population based evolutionary algorithm for fast optimization. The MODE has been widely used in various fields including construction problems (Cheng and Tran 2014). The case project was adopted from previous study of an actual high-way construction project (El-Rayes and Kandil 2005). The case study is used for applying the proposed model that collected in planning phase. The project comprised 18 construction activities, each of which has a number of possible construction alternatives. For instance, in a construction phase of the highway project, there are many resource selection options for the soil excavation and compaction, concrete pavement, rebar installation, formwork installation activities, etc including: (1) different construction material; (2) crew formation with different number of workers and different machine; (3) working shift with different number of overtime hours. Each of selected option results in different time, cost, quality for an activity. Figure 3 shows the precedence relationships of the network and Table 1 shows the associated time, cost and quality for the options of activity. From this table, there is an average of 3.4 construction methods for each of 18 activities, which produces billions possible combination for delivering the entire project. Each possible combination has a unique impact on project performance, which means that project managers must search in a large number of potential solutions to find those that establish an optimal tradeoff/balance among construction duration, cost, and quality. This study used the developed newly developed multi-objective optimization model to search the many potential solutions.
Optimization result of OMODE-TCE
Table 2 shows parameter settings for the proposed OMODE-TCQT (Ali et al. 2012; Cheng and Tran 2015; Storn and Price 1997; Wu et al. 2010). Thirty independent optimization runs were conducted to avoid randomness. Table 3 lists the first 9 non-dominated solutions in descending order of time/duration, cost and quality, respectively, along with optimal construction method combinations. Project managers may select the optimal solution for a specific project scenario based on experience, preferences, and specific situation conditions. Figure 4 shows a typical Pareto optimal front obtained using OMODE. This front shows clearly the relationships among project duration, cost, and quality. This three-dimensional visualization of the tradeoffs may help decision makers evaluate the impact on project performance of the various potential resource-utilization plans.
The non-dominated solutions may also be used to optimize tradeoffs between any two objectives on a two-dimensional plane. Figures 4–6 show the relationship between time and cost, cost and quality, and time and quality, respectively. As shown in the timecost curve example (Figure 5), lower project funding correlates with longer project completion duration and vice versa. However, Figures 5–7 may not be good representatives of the entire tradeoff surface in the three-dimensional space. In fact, the two-dimensional tradeoff surface, when projected from three to two dimensions, may lose some non-dominated points because it is the hidden dimension that makes these points non-dominated.
Statistical comparison and analysis
We compared OMODE performance against NSGA-II (Deb et al. 2002), MOPSO (Yang 2007), and original MODE to assess comparative effectiveness. The latter three algorithms have all been previously applied to TCQT problem with impressive success. For comparison purposes, all four algorithms used an equal number of function evaluations, had population sizes of 100, and used a maximum of 500 generations. In NSGA-II, the constant mutant and crossover probability factors were set at 0.5 and 0.9, respectively. In MOPSO, the two learning factors c1, c2 were both chosen at 2, and the inertia factor w is set in range of 0.7 to 0.3. MODE and OMODE control parameters remained the same, as stated previously in Table 2. Thirty independent runs were carried out for all experiments.
Table 4 shows the performance results obtained by proposed algorithm and benchmarked algorithms. Observing from this table, all of five solutions found by OMODE model are superior to previous findings and benchmarked model. In terms of time, all models can obtain the best time, but OMODE yields the higher quality and lower cost (case 1). The proposed algorithm can acquire lowest cost and highest quality.
Multi-objective optimization problem performance measures are more complex than those of singleobjective optimization problems. Three major issues
are normally taken into consideration: (1) convergence to the Pareto optimal set; (2) maintenance of diversity in solutions of the Pareto optimal set and (3) the maximal distribution bound of the Pareto optimal set (Wu et al. 2010; Wang and Singh 2009). Numerous quality indicators have been suggested in the literature (Coello and Coello 2006; Deb et al. 2002; Fonseca and Fleming 1995). These indicators may be classified into four categories based on whether they evaluate: 1) closeness to the Pareto
Options of resource utilization.


Indicator weight
Quality performance NA Not available
2) the diversity in obtained solutions; 3) both 1 and 2. The following describes the three quality indicators used in this research to evaluate, respectively, each of the four issues:
C-metric (C): C-metric is often used to assessthe quality of the true Pareto front of optimized problems (Zitzler and Thiele 1999). S2  S be two sets of decision solutions. C-metric is defined as the mapping between the ordered pair (S1, S2) and the interval [0,1]:
The numerator in Eq. (12) denotes the number of solutions in S2 are dominated by at least one solution in S1, the denominator is the total solutions in S2. Provided that C(S1,S2) ¼ 1, all solutions in S2 are dominated by or equal to solutions in S1. If C(S1,S2) ¼ 0, then S1 covers none of the solutions in S2. Both C(S1,S2) and C(S2,S1) should be checked in the comparison because C-metric is not symmetrical in its arguments (Wang and Singh 2009). Table 5 illustrates comparison results among four algorithms in terms of C-metric, where A1, A2, A3, and A4 indicate OMODE, MODE, MOPSO, and
NSGA-II, respectively. Results show that OMODE dominates more than 43% of MODE solutions, 75% of MOPSO solutions, and 73% of NSGA-II solutions on average.
Spread (SP): This indicator (Wang et al. 2010) measures the extent of spread achieved among the non-dominated solutions. The mathematical definition of SP may be given as:

Number of decision variables
Crossover probability

Scaling factor
where X is a set of solutions, ðE ; E Þ are k extreme solutions in the set of true Pareto-front PF, k is the number of objectives and dðX; XÞ ¼ minY2X; Y6¼X ||FðXÞ  FðYÞ|| is the minimum
Euclidean distance between solution X and its neighboring solutions in the obtained non-dominated X set; dXÞ¼, jjXX1jjPis the total solutions inX2X dðX; XÞ is the mean value of allX set.
X zero for this metric indicates all members of the
Best non-dominated solutions obtained by OMODE-TCQT.
Project performance
Quality (%)
Sorted by time
Sorted by tost
Sorted by quality
Time-Cost tradeoff analysis
Pareto optimal set are spaced equidistantly. A smaller value of SP indicates a better distribution and diversity of non-dominated solutions. Table 6 shows a comparison of the spread metric for different algorithms. This supports that the average performance of the OMODE is superior to that of the three other algorithms.
Hyper-volume (HV): This indicator calculates
Project Cost ($)	x 105
Cost-Quality impact tradeoff analysis.
Time-Quality impact tradeoff analysis.
the volume (in the objective space) covered by members of a non-dominated set of solutions X for a problem that works to minimize all objectives (Wu et al. 2010; Zitzler et al. 2003). Mathematically, a hypercube vi is constructed for each solution Xi 2 X with reference point W and the solution Xi as the diagonal corners of the hypercube. The reference point can be found simply by constructing a vector of worst objective function values. Thereafter, a union of all hypercubes is found and its HV is calculated as product of allvi:
Algorithms with larger HV values are desirable. The HV value of a set of solutions is normalized using a reference set of Pareto optimal solutions with the same reference point. After normalization, the HV values are confined to range [0,1]. Table 7 lists the results for each of the four compared algorithms in terms of HV. From Table 7, we see that the proposed model obtains the largest HV values, which means that OMODE has better convergence and diversity performance than the other three algorithms.
Result comparison between OMODE-TCQT and benchmarked algorithms.
Project performance
Quality (%)
Previous findings
NSGA-II-TCQT

As shown in the statistical results, opposition-based learning operator helped the proposed algorithm in achieving the better results by having the diversified search space during optimization process. The computation time is related to the distance of these initial guesses from the optimal solution. The opposition-
Comparison of C-metric for different algorithms.




Comparison of HV-


based learning operator has improved the chance of starting with a closer (fitter) solution by simultaneously checking the opposite solution. By doing this the fitter one (guess or opposition guess) may be chosen as an initial solution. In fact, according to probability theory, a guess will be further from the solution than its opposite guess 50% of the time. Therefore, starting with the closer of the two guesses (as judged by its fitness) has accelerated the convergence.
The research provides an alternative DE-based methodology to solve the construction TCQT problems, that is, determining an optimal set of construction methods for all activities which corresponds to the minimum project time, cost and the maximum project quality. The novel multi-objective optimization algorithm OMODE utilizes an opposition-based learning technique to enhance significantly the diversity of the initial population and generate potential candidates at the beginning of the algorithm. OBL is employed through the entire evolution process to balance OMODE diversity and convergence.
Experimental results demonstrate that the proposed OMODE approach efficiently solves multi-objective TCQT problems and finds multi-objective Pareto optimal solutions in one simulation run. OMODE displayed better diversity characteristics, yielded better compromise solutions, and attained a higher degree of satisfaction than the widely used multi-objective evolutionary algorithms MODE, MOPSO, and NSGAII. The Pareto front generated by OMODE provides information that helps construction-project decision makers determine the optimal tradeoff among the three important project considerations of project duration, project cost, and project quality.
The proposed OMODE is expected to assist researchers or practitioners in effectively analyzing and planning construction projects. However, the scheduling tool in this study only considered deterministic and static input data and assumed that the logical relationship amongst activities is ‘finish-tostart’. Despite the model’s positive application on the aforementioned case study, it is still worth to point out some limitations and suggestions for improvement. The proposed model need to be tested with large scale repetitive projects, i.e. a high rise building or even a skyscraper project with thousands of activities involved. The computational efficiency of the proposed model in such large scale situation is of practical concern. Integrating advanced techniques such as parallel computing into current model represents an interesting direction for future research. Therefore, further study is required to build an optimization model to stochastic data. Other possible dependencies in activity relationship including ‘finishto-finish’, ‘start-to-start’, ‘start -to- finish’ could be involved in the proposed model.
Acknowledgments
This research is funded by Ho Chi Minh City University of Technology - VNU-HCM under grant number T-KTXD-
No potential conflict of interest was reported by the authors.
