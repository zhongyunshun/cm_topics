Role of Simulation in Construction Engineering and Management
Construction simulation is the science of developing and experimenting with computer-based representations of construction systems to understand their underlying behavior. This branch of operations research applications in construction management has experienced significant academic growth over the past two decades. In this paper, the author summarizes his views on this topic as per his Peurifoy address, given in October 2008. The paper provides an overview of advancements in construction simulation theory as reported in literature. It then summarizes the key factors that contribute to successful deployment of simulation in the construction industry, and the key attributes of problems that make them more amenable for simulation modeling as opposed to other tools. The paper then provides an overview of long-term simulation initiatives leading to the next generation of computer modeling systems for construction, where simulation plays an integral role in a futuristic vision of automated project planning and control.
CE Database subject headings: Simulation; Construction management; Decision support systems; Automation;
Author keywords: Simulation; Construction management; Decision support; Automation;

Engineers involved in managing construction deal with the production aspects of realizing a facility e.g., construction of a petrochemical plant, a mine, or an interstate highway. In this context, engineers are involved in developing and efficiently designing productive methods and processes for excavations and embankments, land reclamation, pipe installation, tunnels, roads, and other civil works. When projects become large or complex, they become more difficult to manage using existing techniques. Computer simulation techniques are very effective in this domain at providing the tools required to design and analyze construction processes regardless of complexity or size.
Using computer simulation tools, models can be built that represent the overall logic of various activities required to construct a facility, the resources involved in carrying out the work crews, equipment, management, etc., and the environment under which the project is being built e.g., weather, ground conditions, labor pools, market situation, etc.. The models represent the process of building a facility as well as its environment, and as such can be used to develop better project plans, to optimize resource usage, to minimize costs or project duration, and to improve overall construction project management.
In general, building a simulation model involves four phases: product abstraction phase specifying the product to be built;
Professor, Dept. of Civil and Environmental Engineering, Hole School of Construction Engineering and Management, Univ. of Alberta, 3-014 Markin/CNRL Natural Resources Engineering Facility, Edmonton, AB, Canada T6G 2W2 corresponding author. abourizk@ ualberta.ca
Note. This manuscript was submitted on June 19, 2009; approved on March 22, 2010; published online on September 15, 2010. Discussion period open until March 1, 2011; separate discussions must be submitted for individual papers. This paper is part of the Journal of Construction Engineering and Management, Vol. 136, No. 10, October 1, 2010.
process abstraction and modeling phase where processes, resources, environment, etc., required to build the product are abstracted and reduced to models; experimentation phase where the simulation is carried out and the models experimented with; and decision-making phase. The simulation phases will be explained in the context of a simple utility tunneling operation using a tunnel boring machine TBM.
To prepare a simulation model for a utility tunnel, we first develop an abstraction of the facility we are building the tunnel. The tunnel can be divided into 1 a working shaft, which generally includes the vertical shaft, the undercut, and the tail tunnel or, as illustrated in our example, a large pit that replaces all three components; 2 the tunnel itself, which can be composed of a number of sections based on ground conditions; and 3 the exit shaft. A typical abstraction/illustration of such a model is shown in Fig. 1.
The “product” information relevant to the simulation in Fig. 1 includes the physical dimensions, ground conditions, and design requirements for the shaft, the undercut dimensions normally used to set up the TBM and facilitate material handling, the tunnel sections, and the removal shaft. Once the product is specified, we try to describe, using a combination of logic and mathematical formulations, the operations that take place to build the product and the resources used in the process. Whenever possible, we use symbolic modeling elements as a means to describe the production process. This allows for better model communication and simplifies the process associated with its composition. Most modern simulation tools also allow the user to supplement the symbolic elements with new elements they can create or with software code embedded directly into the model. There are a variety of methods that can be used to build simulation models. Fig. 2 shows a CYCLONE model of the tunnel excavation process while Fig. 3 shows a Simphony special purpose simulation model for the entire tunnel project shown in Fig. 1. The model includes the shaft construction process, the tunneling process the excavation carried out by the TBM, the material handling using muck cars and trains, the crane to lift cars to the surface and for material handling, the weather process and its impacts on the productivity of crews, the shifts and the breaks that the crews use, and their influence on production. The basic difference between the two models is that the first uses generic modeling elements tasks, queues, etc. to build the model while the second uses special purpose elements suitable for the tunneling domain shaft, train, etc.. The elements encapsulate the discrete-event models and all information pertaining to the product it represents and resources required to produce it.
In addition to the modeling phase, simulation involves experimentation with the computer model to study the underlying system behavior. This is achieved by processing the model using a
combination of discrete-event simulation, continuous simulation, and other algorithms. The results are generally parameters useful for decision making, such as the time it will take to complete the project and each of the project’s components, costs, resource utilization, and any bottlenecks in the process.
The significance of the simulation modeling approach is that it enables engineers to accurately experiment with various approaches for completing the project without having to set foot on site. Based on the author’s experience in the construction industry in Alberta, carrying out such analysis generally yields better understanding of the process, lower project costs, shorter durations, improved quality, and increased certainty in project delivery. The decision-making phase essentially uses the knowledge of the user and various scenario analyses using the simulation experiments to prepare recommendations that will ensure the project achieves its desired objectives.
Perspective on Construction Simulation Systems
The prevalent approach for simulating construction operations has traditionally been discrete-event process interaction simulation. Using this approach, a simulationist creates a model of a construction operation using specific modeling components, as demonstrated in Figs. 2 and 3. Construction researchers spent considerable effort since the 1970s to develop simple-to-use simulation tools so that they can be adopted by the industry. The proliferation of the resulting research and accompanying tools into the industry has not been widespread, however. In fact, most of the successes documented in literature especially in the ASCE Journal of Construction Engineering and Management have been academic in nature with only pockets of successful industrial applications. This section will first review the literature that summarizes the academic progress in construction simulation and concludes with the author’s observations on the progress achieved to date.
Simphony user-inserted code to calculate the travel duration for a train in a tunnel
model resources. Although one can visualize the train hauling dirt called Simphony capable of general-purpose modeling, as well as in Fig. 2, if the two trains used in the model have different prop- useful for creating special purpose simulation tools for the induserties, it would be difficult to distinguish them and hence manipu- try. What characterized this second stage of development is the late them in the model. An example would be for an older train emphasis on more modeling and simulation capability compared that needs more frequent maintenance or which experiences more to previous tools. To achieve this, the systems utilize various cafrequent breakdowns. To model such phenomena we need to ex- pabilities offered by modern programming languages to facilitate plicitly assign attributes to the entity representing the train in the more complex model development, to provide more flexible user model. Many of the enhancements of CYCONE overcame this interfaces, to offer explicit modeling of simulation entities and limitation and thus offered the modeler more flexibility e.g., UM- resources, to provide means for the users to extend the simulation
CYCLONE.	language functionality through user written code, and to provide
The second stage coincided with advancements in program- extensibility and hierarchy in model development. ming languages and, in particular, object-oriented programming.
Although enhancements to CYCLONE provide explicit re-
A number of simulation systems and simulation applications can source representations, more recent modeling systems such as
be identified from the early 1990s until 2000. Liu and Ioannou
Simphony or STROBOSCOPE provided many features to provide
1992 developed construction object-oriented process simulation more modeling flexibility including, for example, the possibility
system, a discrete-event simulator system, which used an objectof the user writing their own programming code to manipulate the oriented design. The simulator could track resources, construct model and its components for more accurate modeling. A simple models using a graphical interface, capture resources, define difexample can be inferred from Fig. 2, where the duration of the ferent resources, and link with other planning systems. Odeh et al.
1992 developed CIPROS, an object-oriented system used for hauling task depends on the excavated tunnel i.e., as the tunnel developing discrete-event simulation networks. CIPROS enabled excavation progresses the hauling distance increases. Such a situusers to relate construction plans and specifications to a construc- ation cannot be easily modeled in CYCLONE and while one can tion plan. Shewchuk and Chang 1991 used object-oriented overcome this limitation using random sampling, there is a sigsimulation models for construction simulation. Oloufa 1993 nificant impact on productivity of the tunnel measured in linear using MODSIM showed that the use of the object-oriented ap- meters per hour based on how far the train needs to travel from proach leads to reduced coding and improved simulation model the tunnel face to unload and return. A Simphony model of the readability. Martinez and Ioannou 1994 introduced STROBO- same task is given in Fig. 4 where the user provides a simple SCOPE as a modeling and simulation language capable of mod- equation to compute the duration of the task based on Eq. 1, for eling a wide variety of systems with extensible features. example from which the duration can be determined prior to AbouRizk and Hajjar 1998 introduced a simulation language each travel task as follows:
1,000 m/km speed of the train km/h
The progress of simulation in academia, in the opinion of the author, occurred over three stages of construction simulation development. Those stages mirror, to a great extent, the advancements in programming languages. The first stage was led by Halpin 1977 with his introduction of CYCLONE. This was, perhaps, the starting point of modern construction simulation languages. A typical CYCLONE model of a tunneling process was shown in Fig. 2. CYCLONE models are generally composed of elements for modeling work tasks, their logical relationships, queuing situations, and implicit resources. Enhancements of CYCLONE included INSIGHT Paulson et al. 1987, RESQUE Chang and Carr 1987, UM-CYCLONE Ioannou 1989, MicroCYCLONE Halpin 1990, and recently ABC Shi 1999 and HKCONSIM Lu et al. 2003. CYCLONE’s strength was in its simplicity and its ability to model cyclic networks, which were beyond the critical path method CPM. Its simplicity, however, created limitations that its successor languages attempted to remedy. One key aspect was the inability of CYCLONE to explicitly Such modeling flexibility offers significant advantages when the modeler attempts to create a practical model for use in the industry. This feature is a simple example of the additional powers and flexibility afforded by modern simulation software. The reader can refer to cited literature for comprehensive capabilities of each of the systems. One should note, however, that at the time of preparing this paper, the only systems among those surveyed in this paper available for use are STROBOSCOPE and Simphony. The first is supported through the efforts of Martinez at Purdue University and the second through the efforts of the author at the University of Alberta. Simphony was recently licensed to DRAXWare Inc. and is available for commercial use through that company.
The third stage saw a move toward integration of simulation with other tools especially visualization four-dimensional computer-aided design 4D CAD. Although many applications were developed over the 1990s, one can easily trace more activity on three-dimensional 3D models and their integration with simulation over the past 10 years. This area, perhaps, is one of the few areas where commercial vendors are making advancements and penetration in the industry. Tools such as Microstation, AutoCAD, and others offer 4D functionality by virtue of integrating a CPM network to drive the CAD components thus driving the visualization process. Researchers in construction used the same concepts except replacing CPM networks with process simulation models. Xu and AbouRizk 1999 demonstrated how AutoCAD models can be integrated with Simphony process models and subsequently visualized, for example. Kamat and Martinez 2003 introduced Vitascope, a discrete-event construction simulation system integrated with 3D visualization capabilities developed for simulation of construction applications as an integrated platform. Furthermore, researchers have begun to look at hybrid modeling, which incorporates more traditional discrete-event approaches with system dynamics, continuous simulation models, fuzzy logic, and artificial intelligence see, for example, Peña-Mora et al. 2008.
What is noticeable from the aforementioned state of the art is the fact that while there have been advancements in the modeling tools, and their potential applications in the industry, there has been limited industrial support if any and certainly no widespread adoption by the industry. In fact, major software developers that service the construction and engineering communities e.g., CAD, scheduling, and estimating software developers or those specializing in offering simulation software for other industries have limited their inclusion of simulation functionality to “add-on” Monte Carlo simulation features to supplement standard scheduling and estimating tools or to visualization of 3D models driven by a CPM network.
A critical observer will, therefore, conclude that there simply is no market for the researched and developed simulation products/solutions in our industry and/or that there is no appetite from practitioners for using such products. In other words, while most experienced researchers in simulation can see the benefits of using simulation as a decision support tool in construction, industry at large has remained unconvinced of the merits of such advanced tools. Efforts to simplify model development, those to provide more powerful tools, as well as efforts of integration with other systems did not seem to change the overall sentiment of the industry in this regard. In the following section, the author will summarize his experience in deploying simulation solutions and systems in the construction industry to demonstrate how the above dilemma can be resolved.
The author, along with his industrial collaborators, staff, and students, has applied simulation techniques in numerous settings for decision making on construction projects over the past 20 years including risk analysis, constructability reviews, and scenariobased planning. The research activity from its inception was based on the principle of collaborations between university, industry, and government. This three-way partnership provided key ingredients, which is perhaps responsible for the successful infiltration of simulation into construction management functions in Alberta. The key factors for this success can be summarized as follows.
Industry’s Meaningful Input into the Research Program
Long-term collaborations where the industry contributes monetary and in-kind support to the research activity were critical for successful deployment of simulation solutions by the author. Industry’s involvement has influenced the direction of the author’s simulation research program, which continually aimed to provide solutions that satisfy industry needs and requirements.
To illustrate, the author’s first attempts at simulation were based on CYCLONE and other general-purpose simulation systems e.g., SLAM, GPSS, etc.. The industrial involvement guided the author toward the development of a simulation system that can efficiently create very specific simulation tools for specific construction processes. This resulted in Simphony, which was created to facilitate the quick deployment of special purpose simulation tools that the industry was interested in. It has also materialized into adoption of the developed solutions by the same industrial partners.
To demonstrate this influence, the author worked with PCL Constructors Edmonton, Alberta, Canada to find solutions for module yard assembly scheduling in a constraint site where CPMbased scheduling was not providing the required support for proper planning. The solution was a general-purpose simulation model developed in 2002 and described later by Mohamed et al. 2007. The second generation of the same solution consisted of a special purpose simulation system for module yard assembly scheduling developed in 2005 to overcome prior limitations Mohamed et al. 2007.
The process of furthering the development continued on and paralleled the academic developments of Simphony. In 2008, a new generation of the product under the title of Simphony.NET 3.5 was released and with it a revised solution for PCL where the simulation processor and its models were embedded in an application that was actually created by the PCL staff Taghaddos et al. 2009. The application itself streamlined the scheduling process for the spool fabrication at the yard, enhanced the predictions of delivery dates to site, and freed one full-time position at the plant for more meaningful analysis compared to continually updating a CPM schedule that was never delivering what was needed.
A similar application, which spanned more than 10 years, relates to the tunneling template shown in Fig. 2. The early applications of simulation were based on building general-purpose models for specific tunnel projects as they arise AbouRizk and Dozzi 1993. A special purpose tool was then deployed in 2000 when Simphony was fully developed for use by the DesignConstruction Branch of the City of Edmonton at their request and in an attempt to streamline planning activities associated with repetitive tunneling work in Er et al. 2000. The template shown in Fig. 2 is a third generation of the first template and was developed by Al-Battaineh 2009. Its unique features include modular elements, which contain discrete-event models of the processes, methods of construction, equipment, and crew configurations used by the contractor. The work was actually an adaptation of the high level architecture HLA concepts simplified and reduced in scope to facilitate implementation in Simphony so as to develop better understanding of the HLA requirements particularly as they relate to communications between different simulation components. Although the thesis work was academic, the resulting tool for the industrial partner was practical and useful. In fact, since its deployment, the template has been the main planning tool for tunnels by this contractor.
Providing Simulation Tools Customized to the Construction Industry That Provide Modeling Flexibility and Power
General Purpose Modeling Template
Simphony template illustration
Simphony models as displayed in Fig. 2 use metaelements that encapsulate the simulation model, product specifications, and other relevant information. The modeling elements are normally built by experienced Simphony developers using standard discrete-event structures and modern programming languages in an extendable environment. The user can build models using those elements from given templates developed by others. Fig. 5 demonstrates the general-purpose modeling template and its elements top, the special purpose modeling template and a tunnel model middle left, and a special purpose template and a model for an aggregate production process middle right. The uniqueness of Simphony extends to enabling the user if experienced with simulation modeling to modify the functionality of those elements for applications not envisioned by the original developer. The creation of the modeling elements and their subsequent modification can be done using one of the Visual Studio supported languages e.g., Visual Basic, as demonstrated in the bottom of Fig. 5. The reader can refer to Hajjar and AbouRizk 2002 for more details on Simphony’s approach to modeling.
Providing Tangible Deliverables to Industry in Short Time Frames
The delivery of a good, credible, and practical solution in a short period of time is paramount to the industry. There is no point in promising a solution that will take years to deploy e.g., after a Ph.D. student completes his/her thesis. The timelines for construction companies are mostly in weeks. An example of how deliverables to the industry can take place parallel to student’s research is the deployment of simulation-based solutions at Waiward Steel Fabricators a Canadian steel fabricator/constructor in Edmonton, Alberta, Canada by the author. The effort commenced in 1997 and has progressed since resulting in the training of four Ph.D. students and four MS students and the deployment of state of the art simulation-based technologies and solutions see, for example, Song 2004, Alvanchi et al. 2009, and Azimi et al. 2009. Song 2004 investigated the development of virtual shop models with an application to Waiward’s fabrication shop. The project helped Waiward assess the efficiency and utilization of different stations in their shop during the thesis development. The thesis itself focused on academic challenges that require resolution in order to facilitate solving an industrial problem. In essence the work completed by the student was delivered to Waiward along the way including solutions related to efficiency at various stations in the shop, process bottlenecks in detailing, inaccuracies in the drafting and their implications to production, and decision support to assist with the evaluation of new equipment and its impact on production. From an academic perspective, the thesis explored a process for creating definitions for steel pieces from drawings once they are produced in StruCad. A database for exchanging information was coupled with process models and heuristics to model the decision process of the shop superintendent in order to create a seamless simulation of the real world at a level of detail and accuracy not attempted before. The thesis also addressed a number of challenges such as the detailed representation of the product being simulated, the problem of modeling human decision-making processes, standardized integration with other applications, and dealing with a lack of historical data for certain processes. The approach is being replicated with other students in similar settings.
Developing Long-Term Relationships and Trust with Industry
The author’s experience indicates that most successful applications take place with companies where trust has developed over a long period of time in years. In most cases, simulation was not the main reason for collaboration for industrial partners, who in most cases were mostly interested in straightforward solutions to improve their bottom line or to enhance their bid presentations. The ongoing interactions created the right atmosphere to deploy simulation-based solutions, however. For example, when North American Construction Group Edmonton, Alberta, Canada was competing for a large-scale earthmoving project, where it had no prior experience, we developed advanced simulations with their team to help them develop a construction strategy and a cost estimate. Likewise, when KBR Edmonton, Alberta, Canada was evaluating a new cutting machine and major investment in material handling for its shop, we developed models to assist them in making a decision. Those interactions then materialized into longterm collaborations that involved many simulation tool deployment or ongoing studies:
• Most tunneling projects in Edmonton are currently being planned using simulation methods mainly due to the author’s
• Construction claims related to design errors AbouRizk et al. 1997, complexity AbouRizk and Dozzi 1993, and changed conditions for a pipeline project used simulation to resolve the claims North American Pipeline, Inc. NAPI 2008;
• Many large projects, including light rail transit expansion, water treatment plants, and interchanges, used simulation to improve estimates and schedules during preliminary design and to enhance the risk analysis processes;
• Design and sizing of equipment maintenance facilities for megaprojects were enhanced using simulation AbouRizk and Hajjar 1996;
• Streamlining of processes using lean concepts through simulation modeling Ferrar 2002; Agbulos et al. 2006;
• Fabrication shop simulation for many of the major constructors in Alberta see, for example, Song 2004 and Wang
• Tower crane modeling for purpose of optimizing lifts, locating cranes, and scheduling works for PCL Constructors Appleton et al. 2002, Waiward, and others;
• Module yard scheduling, site layout optimization, and space constraint scheduling for many projects;
Sufficient and Uninterrupted Long-Term Funding for the Research Program
The author receives regular uninterrupted funding since 1994 for his simulation research activity on 5-year cycles under the umbrella of the Industrial Research Chairs program of NSERC the federal granting agency in Canada  The funding is generally 50% from NSERC and 50% from private industry. The long-term funding provides stability for academics, the provision of full-time staff e.g., two full-time programmers, one for over 12 years working on the research team, ability to recruit top students, and building/upkeep of necessary research infrastructure. The funding grew from the first cycle of $250,000 annually to an average of $1M annually in the current cycle.
Areas of Application Where Simulation Is Generally More Effective Than Other Tools
The author’s own experience shows that simulation is most effective in the following situations:
• When problems are characterized by uncertainty. Simulation models generally offer significant opportunities to model probabilistic phenomena that are often encountered in construction. Activity durations, random resource branching, breakdown of equipment, arrival processes e.g., weather, material delivery, work orders, and design drawings, availability of crews, and quality of work completed are only a few of the processes that can be probabilistically modeled. Other construction management techniques, although recently enhanced through Monte Carlo simulation, are not capable of offering the same degree of modeling uncertainty. When a problem is characterized by uncertainty as is the case in most construction operations, simulation is the most suitable analytical tool to model and analyze the problems at hand. A comprehensive study of uncertainty modeling in construction can be found in AbouRizk 1990.
AutoCAD, Microstation,	change mdoel direction	reporting, aggregation	planning
Comprehensive model of a construction project in COSYE
• When problems are technically or methodically complex. For example, a change in condition claim for a pipeline project see North American Pipeline, Inc. NAPI 2008, for example requires the construction processes to be modeled along with the geographic features creeks, ponds, etc., the ground conditions as they change during the course of the project spring/ summer thaw versus winter freeze, the weather encountered, the resources assigned to the project, and how these resources shift from segment to segment. Such a project can be modeled using CPM, but the level of abstraction imposed will not allow the modeler to generate an accurate depiction of the impact of changes in the project’s progress and its subsequent cost and schedule.
• When repetition is evident. Halpin 1977 demonstrated that cyclic networks and linear projects with repetitive tasks are ideal for simulation modeling. The body of literature on this subject shows the effectiveness of simulation in modeling repetitive or cyclic processes. For example, modeling a repetitive earthmoving operation can be accomplished using a handful of elements using CYCLONE. The same process can take numerous activities in CPM.
• When flexibility in modeling logic and knowledge is required to formulate a model. Modern simulation languages offer significant advantages over CPM as well as prior simulation tools. Most languages are extensible, allowing the modeler to build sophisticated decision structures in the model to accurately represent the actual operation. For example, a lift e.g., of a module on an industrial construction site that can be accomplished by one or more cranes depending on various conditions e.g., preference, or availability of various resources can be easily modeled using simulation constructs see Moghani et al. 2009, for example.
• When an integrated solution is required. Modern simulation tools offer a great medium for integrating multirepresentations and multiviews of a project including its product, its environment, its processes, its resources, etc. This enables users to quickly generate project schedules, costs, resource requirements, material procurement schedules, etc., thus facilitating effective scenario based planning during preconstruction studies. An example of this is in Al-Battaineh 2009.
• When detail and accuracy matter. In many cases, simulation is used simply because it allows the modeler great levels of flexibility in representing the details of resource interactions, activity relationships, and various constraining logic. For example, modeling the effect of crew learning due to repetition, labor fatigue due to long shifts, or change in the penetration rate of a TBM due to operator skill or ground conditions can be accomplished in a simulation model with reasonable effort. The operations can then be studied and analyzed to great levels of detail and within acceptable levels of accuracy.
Long-Term Vision for Simulation in Construction
The author’s long-term vision is to achieve a fully integrated, the highly automated construction modeling and simulation environment deployable across the design and construction phases in the life cycle of a facility. Fig. 6 demonstrates an overarching model that gives a comprehensive representation of an entire construction project, with all of its components. The reader should note that the model shown in Fig. 6 goes well beyond the process interaction models described up until this point in this paper.
Fig. 6 represents an integrated representation of the product model, the process model, the environment model, and all associated constraints. From an experimentation viewpoint, it offers visualization features, intelligence support, integration of multiworld-views of simulation algorithms e.g., integration of discrete event, continuous, and real time, and support for real-time control. The models and their simulations would span the entire life of the project with real-time input and feedback to facilitate project execution until it is handed over to operations. In essence, the intent is to provide a “virtual world” where a construction project is planned, executed, and controlled with minimum disruption to the actual project. This poses many challenges, which have been shown through a number of research projects Song 2004; El-Ghandour 2007; Shahin 2007; Van Tol 2005; Al-Battaineh 2009, which cannot be resolved without a major advancement in modeling and simulation in construction. The author is spearheading an initiative under the title “Construction Synthetic Environment Framework” CSE to produce such advancement.
The implementation of the CSE framework in software is referred to as a construction synthetic environment COSYE. COSYE is based on the high level architecture IEEE 1516 standard for developing large-scale models IEEE 2001. The HLA architecture supports building complex virtual environments federations using distributed simulation technologies. In addition, it provides standards for building the individual components federates of such environments by different developers while maintaining interoperability between them. One may think of a part of a simulation that does a specific function as a federate. For a tunnel, for example, the shaft construction simulation component can be a separate federate. A summarized description of the CSE applications in construction can be found in AbouRizk 2009.
To comply with HLA standards, simulation components must follow HLA rules, as defined by the IEEE. The second aspect of the HLA standards, interface specifications, defines the functional interaction between federates and the run-time infrastructure RTI. During run time, the framework provides the necessary communication, information exchange, and data-sharing protocols through the RTI to ensure an HLA-valid simulation through synchronization, coordination, and consistency between the different federates. Any software interfacing with the RTI can be considered an HLA-compliant federate; these are not limited to simulation models. The conceptual architecture of COSYE is described in AbouRizk and Hague 2009.
The object model template OMT is the third component of the HLA standards. The OMT provides common standards for documenting HLA object model information in a three-part format: 1 federation object model FOM; 2 simulation or federate object model; and 3 management object model. In order to develop large-scale or complex simulation models, all these objects must be properly designed and documented.
Objects and interactions in a model allow for improved collaboration, reusability, and interoperability in modeling. Where multiple simulationists are involved in modeling specific simulation components, the OMT and HLA services allow the simulation to be scaled down to manageable levels. This process also suggests a means of standardizing simulation, through which a group of developers can generate and reuse individual simulation components for greater efficiency e.g., producing a library of common construction processes, such as models for weather generation and equipment breakdown, etc.. Also, the HLA also contains elements of distributed simulation and parallel computing, integrates different simulation algorithms within a federation e.g., continuous and discrete event, provides for man-machine interactions, and other advanced simulation features.
The HLA approach is suited for complex applications such as the ones addressed in construction. The HLA standards facilitate the reuse of the developed components as part of the new federations. A research team led by the author has recently built the RTI, the required core simulation services, and a modeling toolkit specifically suited for construction applications. These elements were implemented in COSYE for use in building desired CSEs AbouRizk and Hague 2009.
The COSYE environment is a software application that runs on the Microsoft.NET platform and supports the development of CSEs in MS Visual Studio. The framework provides tools to define and build the FOM and compile it into .NET assemblies.
Through COSYE, developers can customize the abstract generic base federate to produce particular simulation behaviors and capture unique systems.
COSYE offers features that separate it from the current state of the art in construction simulation including the following:
Detailed and comprehensive modeling. While current simulations in construction succeed at the process modeling level, most do not represent a comprehensive model of a project and all its components. The COSYE framework offers a comprehensive representation, which includes an overall integrated representation of the product models of the facility being built; process models for various construction operations and their interactions with material, resources, and management processes; models for business and management processes; and models for external influencing factors and constraints.
Support for collaborative development. Construction projects generally constitute large-scale simulations involving a multitude of processes, resources, and facility components. When one tries to develop a model using Simphony or similar software, the scale of the models grows quickly to the point where they are difficult to manage. Furthermore, collaborative development is often not possible as the modeling environments do not lend themselves to collaboration different simulationists developing different components and then piecing them together to obtain one large model of the entire project. To remedy this, the COSYE framework was built to offer the following:
Distributed modular components models can be developed on different machines and yet join one simulation; Simulations with common foundations so that the models can integrate into one unified model to represent the overall project;
Prebuilt, standard, and reusable models for repeating and common simulations to make the development process efficient.
Seamless integration between various world views of simulation. Construction simulations have traditionally taken Monte Carlo simulation/discrete-event process interaction approaches, with new approaches emerging from the areas of artificial intelligence, system dynamics, and continuous models. Within the COSYE framework, the simulation algorithms are deployed at the federate level individual simulation component and thus can vary from component to component. The simulations are regulated through the RTI and thus there is no limit on what simulation algorithm is being used. Integration between various world views is, therefore, seamless and efficient.
Support for efficient integration between simulation models and other software and tools. In order to support various phases of a project, a framework needs to enable hooks for many of the traditional tools available to a construction project, such as CPM schedules, estimates, and control systems from various vendors. The COSYE framework was designed with this in mind and therefore offers the flexibility needed for this to take place.
Implementing CSEs for Construction Projects
In order to examine the possibilities afforded by the HLA and the usefulness of COSYE as a tool for next generation simulations, a number of large-scale simulation projects are being completed by the author and his research team in partnership with the industry in Alberta. In particular, CSE environments for 1 tunneling; 2 industrial piping fabrication and construction; and 3 a bidding game are being implemented to test the feasibility of this approach and what it offers. The tunneling CSE is discussed in this paper to demonstrate the framework.
This section will briefly describe the tunneling federation from a user’s point of view. The intent is to give the reader a feel for the advantages that can be accrued from using an HLA-based simulation compared to the current state of the art simulation systems. A summary description from the developer’s point of view can be found in AbouRizk and Hague 2009.
The tunneling federation COSYE model of tunnel construction is depicted in Fig. 7. The federation is composed of the individual federates simulation components, the RTI the overarching simulation engine of the HLA, and external components site data capture, for example. The conceptual view shown in Fig. 7 is meant to broadly describe the contents of the federation during simulation. Each of the federates shown in Fig. 7 runs as a separate simulation as a separate program in its own window or on a separate computer in a network setting and is independent of the other federates. The simulation is executed when all federates that are essential for the federation “join” the simulation and “execute” their own simulations. The overall simulation is regulated by the RTI where each of the individual simulations schedules their events, advances their local time, and progresses by permission of the RTI. The RTI is a server-based utility that can run on any of the machines that house one or more of the federate simulations or on its own server.
The shaft federate simulates using a discrete-event algorithm the construction process of the working shaft, the exit shaft, and any intermediate shafts. The basic activities modeled are preparation and start-up activities; piling if required; excavation by drilling, by small excavators, or by hand; support and liners’ installation; construction of the tunnel undercut in the working shaft if required; any tail tunnel if required; and installation of train switches. Although the shaft simulation federate is written in discrete-event code using Simphony.net 3.5 compiled within the federation, the simulation follows the same models detailed in Zhou et al. 2008. The federate interface top left corner of Fig. 7 reflects only the input required from the user and displays the output during the simulation. The simulation code that drives the federation can be built using discrete-event models using Simphony.NET 3.5, a user created event scheduling algorithm or other simulation algorithms. In this federation the discrete-event models that drive the various federates used Simphony.NET 3.5 and were encoded within each of the federate forms using C# or VB in MS Visual Studio.
The tunnel federate is designed to simulate the construction process at the tunnel face. It includes the tasks shown in Fig. 8, which also displays the dirt removal federate activities.
The tunnel federate uses a discrete-event algorithm to schedule all its events although we have implemented fuzzy logic for determining the time required to excavate one section one stroke or the productivity of the TBM as per Shaheen et al. 2009. The tunneling federate shown in Fig. 6 shows the input required at the time when simulation commences as well as displays production statistics during simulation. A demonstration of the flexibility offered through COSYE and the HLA is to consider how breakdowns of the TBM can be modeled, for example. We can simply create a new federate with a simple user interface e.g., a button on the form with discrete-event code at its execution, which when invoked by the user can force a breakdown of the TBM. This user interference with the simulation progress is not necessarily trivial if approached within a traditional simulation system such as Simphony. But by virtue of the HLA structure, the simulationist actually does not need to interfere with the other federates and their simulation. She/he only needs to develop the new federate and interface with the TBM resource, which will be preempted when the user invokes a breakdown. Likewise we can simply extend this to other forms of modeling breakdowns. In this federation, for example, we use a stochastic model to generate the breakdown events based on historical data. The breakdown process can be separately created and then added to the simulation to simply interface with the TBM. The federation shown here uses a Bayesian updating scheme to improve the predictability of the breakdown. The developer of this federate discussed later does not need to concern themselves with the other models of the tunneling process. She/he only needs to work off the same object models specified for the federation and needs to know how to interface with it. The advantage of the COSYE framework in this case is the independence between the federates where one is using a manual driven interface with the simulation, while the other can use a statistically driven process. In fact, such federates are reusable in other federations thus offering advantages during deployment.
The dirt removal federate models the process of hauling dirt from the tunnel face to the working shaft using a train and carts, transporting carts to the ground level using a crane or hoist, loading carts with material as needed liners, etc., and returning to the tunnel face. All manipulation requires navigating switches that are embedded in the discrete-event models, which describe this process. The approach used for the tunnel and dirt removal is similar to the one described in Al-Battaineh 2009.
The supplier federate models the supply of liners from a precast concrete supplier. It receives orders for liners based on a schedule provided by the procurement federate, produces the liners, and delivers them to the site. There can be various suppliers they can be instantiated from the same supplier federate for other materials in the model. The one described here is limited to the liner supply.
The procurement federate plays the same role of procurement office for the tunneling contractor. It tracks how many liners are in the inventory and determines when the deliveries of new liners are required generally at a given threshold. The federate places its orders to the supplier federate.
It should be noted that the supplier and procurement federates were added to the simulation by a simulationist who wanted to study the supply chain associated with tunnel activities and was not involved in the tunnel federation development. The use of the HLA-based COSYE made the addition of these two federates fairly independent of the overall tunnel simulation, which reduces costs of modeling and enhances reliability since the other parts have already been validated, for example.
The scenario setup federate allows the user to configure different tunnel construction scenarios. The idea is to provide an all-in-one interface for the user to input initial general information for the simulation he/she desires.
The tunnel federation employs Bayesian techniques for estimating variables including predicting machine breakdowns and unhindered TBM penetration rates. The simulation methods in this federate use Bayesian updating techniques described in Chung et al. 2006. What is significant and unique about this federate is the fact that it takes advantage of the HLA and COSYE distributed frameworks since the updating methods depend on a prior distribution that would have been defined earlier in the planning process. When simulations are rerun during project execution, actual data become available, which can be used to enhance the base assumptions of the prior distributions. This federate receives actual observations from the site using the data capture federate and makes use of those observations to redefine the updated distributions, which in turn enhances predictions. The fact that the input from the site is in real time and can be blended within the simulation without additional effort is significant and unique and is afforded by this framework.
As tunnel construction progresses, more and more data can be fed into the federation to enhance its predictions. This federate records data from the site into a database associated with the federation. The data are then used by the Bayesian updating federate to enhance its prediction. This federate has no simulation algorithm. It is updated daily during actual construction.
The product model federate is developed to obtain product information from the CAD drawings. The purpose is to use 3D CAD drawings and semiautomatically extract the geometries as well as materials information for different construction scenarios during the planning stage and then use them as inputs for the simulation model. For this purpose, 3D models are tagged with required attributes so the federate can extract the required information. An illustration of this federate, which is active prior to the actual simulation, is given in Fig. 9.
The visualization federate simply shows a 3D visualization of the progress of the tunnel construction in real time during the simulation. This federate was developed using 3D models of TBM, train, working shaft, and precast sections using Autodesk 3ds Max 2010 and then converted to .x files to be readable by the visualization software, which is a 3D gaming engine. The federate gets initial information from the scenario setup federate and real-time information from the shaft and tunnel federates. The updated information includes current chainage and state of the objects used in tunnel and shaft construction.
Other Federates to Demonstrate Expandability of the Federation
Some of the key features demonstrated through this federate include collaboration between various simulationists to produce a large-scale model. For this application, the federation was actually developed by three different students and staff. The add-on procurement federate was developed by a fourth student well after the initial federate commenced. Likewise, a visiting student from a different university recently added a federate to estimate greenhouse gas emissions for a construction process. He applied the federate to the tunnel federation with relative independence from the others.
To date, the CSE developed for tunneling has proved to be our most complete realization of the COSYE environment for simulation modeling in construction. However, a number of other synthetic environments are also in advanced stages of development, including CSEs for bidding, industrial construction, and steel fabrication. Bidding games, as one of many simulation applications in construction, try to depict a real bidding process to help users examine different bidding strategies. The working model has shown the viability and flexibility of the concepts and demonstrated the advantages of synthetic environments when accessed by multiple users. To expand on our work in industrial processes, an industrial construction federation is being developed to consider issues of resource allocation. This CSE is composed of a number of federates including shop fabrication, module yard scheduling, and graphical federates, which have already been developed in the COSYE environment. This federation is also linked to the spool fabrication shop federate. In the fabrication CSE, the focus is on investigating ways for incorporating existing data residing in integrated databases for populating the CSE with progress information and then enabling 4D visualization of project progress.
The author’s experience with applying simulation tools in the construction industry paints a different picture than the prevailing state of the art, which predominantly shows that although simulation systems have evolved since their inception in the 1970s, the documented successes have been mostly in the academic and research domains rather than in the industry. The most significant reason for the success is a long-term collaborative research and development program, which the author has led over the past 15 years. The collaboration gives the industry part ownership of the research program, the ensuing tools, and their applications. It also provides input to the research activity thus resulting in practical tools and solutions, which can be adopted.
Furthermore, the author’s views are to view simulation as an opportunistic tool that should be introduced in opportune applications and situations rather than a universal tool for all construction management applications. This was demonstrated through the trend of using special purpose simulation systems where possible rather than providing general-purpose tools with applications. Once early adopters become comfortable with such tools, they normally progress to more sophisticated applications.
The future direction of the author’s research program is to explore the use of HLA-based integrated large-scale models in construction. If CSE deployment proves successful, they can offer industry significant modeling capabilities, which could play a role in the industry’s further adoption of simulation tools. Early successes of this approach in industrial construction and in tunneling showed promise. However, it should be noted as well that the proposed approach is based on the HLA, which requires greater levels of effort and resolution in preparing a model of a real system and requires more detailed modeling components to drive a simulation compared to discrete-event simulation. This poses a challenge: While we require the HLA services to facilitate collaborative, modular, real-time input, and integrated simulation developments, we cannot ask for more details in describing models that are already large and complex. In other words, the HLA realities of detailed model instructions may offset the benefits of model decomposition and parallel computing, which were attractive in handling the large-scale complex construction models. Further research to alleviate these challenges and hindrances is, therefore, required and is spearheaded by the author and his collaborators.
Acknowledgments
The writer wishes to express his gratitude to the Natural Science and Engineering Research Council of Canada NSERC, and the construction industry collaborators that jointly funded his research activity over the past 15 years. The work reported in this paper is the product of many students, staff, and colleagues of the writer at the University of Alberta.
