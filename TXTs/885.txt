
Improving workflow and resource usage in construction
schedules through location-based management system (LBMS)
Hylton Olivieri, Olli Seppänen & Ariovaldo Denis Granja
To cite this article: Hylton Olivieri, Olli Seppänen & Ariovaldo Denis Granja (2018) Improving workflow and resource usage in construction schedules through location-based management system (LBMS), Construction Management and Economics, 36:2, 109-124, DOI:
10.1080/01446193.2017.1410561
To link to this article:  https://doi.org/10.1080/01446193.2017.1410561

Full Terms & Conditions of access and use can be found at https://www.tandfonline.com/action/journalInformation?journalCode=rcme20
  

Improving workflow and resource usage in construction schedules through location-based management system (LBMS)
Hylton Olivieria, Olli Seppänena and Ariovaldo Denis Granjab
adepartment of Civil engineering, aalto university school of engineering, espoo, Finland; bConstruction Management research Laboratory (LagerCon), department of architecture and Building, school of Civil engineering, architecture and urban design, university of Campinas (uniCaMP), Campinas, Brazil
ABSTRACT
Critical Path Method (CPM), a planning and controlling technique, is widely used in the construction industry. However, CPM is criticized for its lack of workflow and inability to schedule continuous resource usage. Location-Based Management System (LBMS) fill these gaps and has been implemented in many construction projects. We propose that LBMS will improve schedules and project performance, addressing CPM’s main shortcomings. This study is composed of three case studies. CPM schedules were analyzed and were improved using LBMS tools. The resulting schedules show improved workflows, crew balancing, resource usage and had fewer interruptions, without affecting project duration. Furthermore, LBMS schedules were optimized with only a few scheduling operations and fewer planning elements. The computational benefit of LBMS increases with the number of locations and tasks in a schedule. Project managers will benefit from a simpler scheduling process and better resource flow.ARTICLE HISTORY
received 11 January 2017 accepted 24 november 2017
KEYWORDS
Critical path method; construction management; location-based management system; workflow; resource scheduling
Introduction	total float and visualization using Gantt charts to plan and 
manage the projects (Olivieri et al. 2016).
The Critical Path Method (CPM) is a powerful scheduling 
                                                     However, linear, repetitive and location-based scheduland progress control tool for managing projects (Bansal ing systems (LS) form a family of alternative, workflow-oriand Pal 2009, Kastor and Sirakoulis 2009). In the construcented methods. LS display construction processes within tion industry, CPM has grown in importance over the last their time-location environments, encompassing multiple several decades (Galloway 2006, Benjaoran et al. 2015) to variables that is cumbersome for traditional CPM schedulmanage complicated projects (Shah and Dawood 2011). ing (Lucko et al. 2014). The Location-Based Management The use of project management software packages, 
                                                   System (LBMS) is the latest generation of location-based such as Microsoft Project® and Primavera®, has enabled planning techniques and has already been employed in the widespread use of CPM (Hegazy and Menesi 2010, construction projects (e.g. Kenley and Seppänen 2010, Bragadin and Kähkönen 2016). However, CPM has been 
                                                   Lucko et al. 2014, Seppänen et al. 2014). LBMS is a method criticized regarding repetitive and linear projects (Harris of construction planning and production control that is and Ioannou 1998, Hegazy and Kamarah 2008), which have based on the movement of resources through the jobsite, lengthy, detailed schedules (Jongeling and Olofsson 2007, aiming to maximize continuous use of labour and produc-
Lu and Lam 2009). CPM’s shortcomings with generating tivity, reduce waste and risk, increase transparency and workflow (Arditi et al. 2002), crew balancing (Russell and improve predictability and flow (Kenley and Seppänen Wong 1993, Hamzeh et al. 2015) and resource continuity, 
                                                   2010). The LBMS algorithm simplifies CPM schedules by such as labour, material and equipment (Mattila and Park focusing on repetitive tasks, logic-patterns and heuristics to 2003, Benjaoran et al. 2015), are also valid complaints. enable continuous workflow (Kenley and Seppänen 2010). CPM involves an algorithm for calculating a project’s 
                                                     Several studies highlighted the benefits of implementcritical path. It is also a planning and controlling system ing LBMS in the control phase. Seppänen and Kankainen (Kelley and Walker 1959) that incorporates concepts like 
                                                   (2004) analyzed six projects regarding production control. Work Breakdown Structure (WBS), critical path, free and 
Seppänen and Aalto (2005) described a Finnish office 

© 2018 the author(s). Published by informa uK Limited, trading as taylor & Francis group.
this is an open access article distributed under the terms of the Creative Commons attribution-nonCommercial-noderivatives License (http://creativecommons.org/licenses/by-ncnd/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited, and is not altered, transformed, or built upon in any way.
  
park case study, which described planning and control processes, but did not compare LBMS to CPM schedules. Seppänen (2009) presented case studies of three commercial projects in Finland, also focusing on production control. Kala et al. (2012) used a case project in California to improve production control. Moreover, Evinger et al. (2013) explored the labour consumption and production results between LBMS and CPM. However, none of these case studies provided a comprehensive view of the planning phase of LBMS, or compared the results with CPM schedules. Since CPM has key identified shortcomings related to the planning phase, and the LBMS planning system was designed to address these shortcomings, research is needed to explore the difference between CPM and LBMS in the project planning phase to determine what performance improvements could be gained by implementing LBMS.
  The focus on the planning and scheduling phase of the research is justified due to its importance to the production management process and project success. Risks and uncertainty are greater at the beginning of a project (PMI 2013) and require an early detailed plan. Project planning serves as a foundation for several related functions, such as cost definition and project control (Mubarak 2015), which is symbiotic with the planning system (Kenley and Seppänen 2010). In addition, proactive project control is dependent on good production pre-planning. For example, when continuous work has been planned, the work is more likely to be performed continuously during the control phase (Seppänen and Kankainen 2004).
  This research validates the assumption that LBMSrelated methods could resolve key shortcomings relating to planning construction projects, especially concerning the lack of workflow, the inability to provide the continuous use of resources and complicated scheduling processes. Data were gathered from three construction projects in Brazil, whose schedules were planned by experienced schedulers using CPM. As the focus of this paper is on the planning system, any references to LBMS can be understood to mean the planning components of LBMS.
  This paper first addresses existing research on the use of CPM to define its main shortcomings in relation to workflow, resources and scheduling processes. Second, the LBMS system is presented, and the CPM and LBMS planning systems are compared to determine if the LBMS method can address CPM shortcomings. Hypotheses are made based on theoretical information about these systems, and case studies are used to evaluate each hypothesis. The findings related to these hypotheses are discussed by comparing the CPM results to the LBMS results. Finally, conclusions are presented and avenues for further research are suggested.
CPM shortcomings based on literature review
Continuous workflow is a key element in construction schedules and have the following benefits: the reduction of mobilizations and demobilizations, decreased production system risk (Kenley and Seppänen 2010), fewer production problems (Seppänen 2009), decreased time required to perform a task as the number of repetitions increases (Wright 1936) and a reduction in peak labour resource requirements (Anagnostopoulos and Koulinas 2010). However, the lack of workflow through locations and crew balancing is a common shortcoming of CPM (Russell and Wong 1993, Arditi et al. 2002, Hamzeh et al. 2015). Repetitive activities in CPM usually have different production rates (Arditi et al. 2002), reflected in different durations which result in a lack of workflow since faster successor activities must wait for preceding activities at each location. Additionally, activities are often not ready to begin when the previous activity finished because the scheduled timing uses buffers and all other required flows (materials, information etc.) are pulled based on planned dates (Koskela et al. 2014). Furthermore, as CPM focuses on project duration (Kim and Ballard 2010), schedule optimization usually refers to analyzing the critical path for opportunities of duration compression, to the neglect of workflow analysis.
  Resource loading and analysis is an important part of the scheduling process since it supports the development of reliable schedules. Traditional CPM assumes that resources are unlimited, which is unrealistic (Damci and Polat 2014). Resource levelling and resource smoothing algorithms were developed to address this shortcoming (Harris 1990, Hegazy 1999). Resource levelling minimizes fluctuations and resource peaks (Hegazy and Kassab 2003, Anagnostopoulos and Koulinas 2010), which might be obtained using methods that considers only non-critical activities (e.g. Galbreath 1965) or critical activities combined with those that have total floats less than or equal to the activity duration (e.g. Harris 1990). Resource levelling approaches set resource limits. If these limits are exceeded, heuristics delay the start date of some activities to mitigate the issue (Damci and Polat 2014). Typically, heuristics operate based on metrics calculated from the original CPM schedules and do not consider resource limitations. For example, delayed activities could be selected based on their total float (Lu et al. 2008), which represent the amount of time that the finish date of an activity may be delayed without impacting the end date of the project. If the only option is to delay the start of a critical activity, the project duration will be extended in resource levelling approaches (Damci and Polat 2014). Resource smoothing is an approach that levels the resource graph even when resource constraints are not violated by moving start dates to achieve a more continuous workflow (Hegazy 1999) within the limits of the total float of each activity (Akpan 2000). Resource smoothing is generally done with heuristic approaches, providing no guarantee of the optimal use of resources (Hegazy 1999).
  The scheduling process is a function of the number of planning elements (i.e. activities) and the number of logic links between those elements (i.e. logical relationships). Kenley (2004) demonstrated this complicated scheduling process for detailed schedules with several locations and activities. CPM schedules are inherently complicated because it cannot accurately model the repetitive nature of construction (Harris and Ioannou 1998, Arditi et al. 2002), and requires many activities to represent a repetitive or linear project (Mattila and Park 2003). Due to the large number of activities and the need to link each activity separately, a CPM network contains relationships that complicate the scheduling process, making CPM schedules difficult to manipulate (Kenley 2005, Jongeling and Olofsson 2007). Furthermore, CPM schedules are often presented as Gantt charts, and many activities and logical relationships make these charts difficult to understand as pertinent information is represented over several pages (Damci et al. 2013).
LBMS
LBMS is a management system for planning and controlling construction projects by providing continuous workflow to crews, increasing productivity and minimizing interruptions (Kenley and Seppänen 2010). LBMS includes two components: a location-based planning system and a location-based control system. The planning system is based on an improved CPM algorithm, which facilitates the scheduling process by focusing on repetitive tasks by location. This automates logic generation using locations and continuity heuristics to plan for continuous work (Kenley and Seppänen 2010).
  One of the goals of location-based scheduling is to have crews mobilize once and continue their work to completion (Kenley 2005). Continuous flow is achieved by aligning production rates (Kenley and Seppänen 2010) and the continuity heuristics of LBMS algorithms (Kenley and Seppänen 2010) which delay a task’s start date to achieve a continuous flow of resources. LBMS schedule optimization focuses on achieving duration objectives by synchronizing production rates by changing the number of crews and maximizing workflow. This approach minimizes risk (Kenley and Seppänen 2010).
  With LBMS, resources and durations are estimated based on quantities and production rates (Kenley and Seppänen 2010, Büchmann-Slorup 2014). Location-based quantities are a critical part of location-based scheduling. 
The quantities of a task define the total work that should be completed in a location before the crew moves to the next location. Quantities are estimated by location (Kenley and Seppänen 2010) and scheduling is based on repetitive tasks. Tasks are composed of locations which are completed by a crew before moving to the next location. Locations of the same task are scheduled sequentially by default and can only be executed simultaneously by deciding to split the task (Kenley and Seppänen 2010). Since continuous work is the default assumption in LBMS, their schedules may naturally result in fewer discontinuities of flow.
  Logic is defined at the task level, not between individual locations. There are four different layers of logic for automatically creating links between tasks and locations and a fifth layer links any location to any other location, as in basic CPM logic. The first logic layer copies the same logic to all locations that share two tasks. For example, if there were a finish-to-start relationship between the drywall and plaster tasks, the logic would apply in any apartment where both tasks are done. Therefore, the logic link is handled at the task level, which decreases the number of logic links in a project, even with repetitive tasks.
  The second logic layer utilizes a hierarchy of locations. For example, the roofing task could have a finish-to-start relationship with drywall on the building level of hierarchy. This means that roofing must be completed in the whole building before drywall can start in any apartment of that building.
  The third logic layer is the sequence of locations within a task, such as ascending from the bottom floor to the top floor. Using this logic layer, it is possible to change location sequences of one or more tasks within a single operation. In this paper, operation is one step of work necessary for developing schedules in a software system using either CPM or LBMS algorithms. For example, if the scheduler inserts five activities and ten logic links, he has fifteen operations.
  The fourth logic layer is required to model the special case of location lags in the sequencing of external logic (Kenley and Seppänen 2010), which can, for example, force a successor to follow two locations after the predecessor.
  The fifth logic layer is a standard CPM link, from any location to any other location (Kenley and Seppänen 2010). Using the five layers of logic, the number of logic links required to model a repetitive project should be greatly reduced, making the scheduling process less complicated.
  In LBMS, buffers are explicitly planned to protect critical relationships and workflows (Kenley and Seppänen 2010). The work can be accelerated or decelerated, through increasing or reducing the number of optimal crews (Arditi et al. 2002). Furthermore, all prior work should be completed before a work crew continues to a new location, and no subsequent work should commence until the work crew has finished its work at a specified location (Kenley 2005).
Comparison of CPM and LBMS planning methods
The CPM process focuses on critical path analysis and minimizing a project’s overall duration, while LBMS focuses on resource management. LBMS adds features to CPM such as continuity heuristics, lumping repetitive activities into tasks and automating logic generation through layered logic (Lowe et al. 2012). This means that if continuity heuristics are not in use and tasks are broken down to individual activities, then LBMS and CPM are technically equivalent and calculate the same dates and critical path.
  Both CPM and LBMS methods are based on a network of work activities. However, the LBMS definition of a task lumps together all locations where similar work is performed by the same crew (Kenley and Seppänen 2010). Thus, in LBMS, a task is made up of activities repeated in multiple locations. For example, the installation of drywall on a specific floor is an activity in CPM, whereas the installation of drywall for all floors represents a task in LBMS (Lowe et al. 2012). Since LBMS identifies which activities form a repetitive work stream (task), it is possible to create logic at the task level that applies to all activities. The result is a decrease in the total number of links. All the locations belonging to the same task can be adjusted with one operation (for example, changing resources for a task would apply to all locations). In fact, most of the planning decisions of LBMS are done at the task level. For this reason, the number of planning elements needed to model an LBMS schedule is a function of the number of tasks, not locations. Differentiating tasks from activities also allows the use of continuity heuristics, which change the start dates of early locations to make them continuous with later locations of the same task (Kenley and Seppänen 2010).
  CPM optimization processes focus on shortening the critical path within resource constraints (Yang and Kao 2012). Durations are generally inputs in the optimization process. LBMS optimization is based on synchronizing production rates to the bottleneck of each construction phase (Kenley and Seppänen 2010), where the bottleneck is the trade that slows down the schedule (Yassine et al. 2014). If production rate synchronization was not done, LBMS continuity heuristics would increase total project duration. Therefore, durations can be considered an output of the LBMS optimization process (Lowe et al. 2012). LBMS optimization makes it possible to achieve a continuous workflow without increasing the total duration, amount of resources or number of subcontractors.
  In terms of resource optimization, both resource levelling and resource smoothing can be applied in CPM and LBMS. In CPM, the floats derived from the critical path are usually considered in the optimization process; thus, resource smoothing cannot affect critical tasks because the process is constrained by the total float (Akpan 2000). In contrast, the LBMS algorithm initially forces tasks towards continuity regardless of their criticality, which usually, initially, leads to an increase in project duration. However, the process continues with production rate optimization, which maintains continuous flow and decreases the total duration.
  The visualization of schedules is independent from the technical planning system used to create those schedules. CPM schedules can be visualized with Gantt charts, network diagrams or flowlines, as long as the activities contain location information. LBMS schedules can be visualized in any of those formats as well. In this study, CPM and LBMS schedules were evaluated in a flowline view.
  Based on the identified shortcomings of the CPM method and the main characteristics of LBMS, the following two hypotheses will be tested:
• Hypothesis 1: LBMS optimization enables more continuous workflow without increasing the total duration of a project, resources or subcontractors;
• Hypothesis 2: LBMS schedules include significantly fewer planning elements (activities and logic) making the scheduling process less complicated.
Research method
A case study research strategy was chosen for this study because it utilizes multiple sources to examine phenomena in their actual contexts (Yin 2013). To gain focus, reduce variation and simplify analysis, purposeful and homogeneous sampling was adopted for the case selection approach (Patton 1990). Five Brazilian contractors were contacted to provide project schedules for analysis. The selected schedules needed to fulfil the following criteria to be included in the study: their schedule was planned by a scheduler with more than 10 years of experience, the schedule was resource-loaded for main tasks, the schedule was completed in the planning phase before construction, and all activities had predecessors and successors.
  Three cases, located in Brazil, from two contractors, were selected for analysis. Case study A (case A) was a residential project with one tower, 23 repetitive floors and 187 apartments. It was built with concrete walls, which were manufactured on site using aluminium formworks. Case study B (case B) was a residential project with two towers, 22 repetitive floors in each tower and 362 apartments, also built with concrete walls as in case A. Case study C (case C) was a three-tower project, with each tower containing 13 repetitive floors and 330 apartments in total. Case C was built with structural masonry and prefabricated slabs.
  Data were collected by reviewing electronic documents. For each project, we accessed the following documents: the baseline CPM schedules (developed using Microsoft Project®), a logical relationship document that contained the logical links of the project tasks, the executive forecasted budget that included resources (materials, labour and equipment), quantities and cost and a document containing the general overview of the project, including blue prints and photos. Quantities, resources and production rates were collected from executive budgets and baseline schedules.
  Only resource-loaded production tasks were considered. Between 20 and 25 repetitive tasks were selected for analysis from each project and the subcontractors responsible for each task were identified. Additionally, all non-repetitive tasks with links to the selected tasks were included. Table 1 shows a short description of the case studies, the subcontractors and the tasks selected for analysis.
  The first step in each case study was to analyze the Gantt chart of the original CPM schedule, in particular the 
Case studySubcontractors and selected group of tasks for each subcontractor(a) residential project a (1 tower, 23 repetitive floors, 187 apartments), built in concrete wallsStructure: Concrete structure (formworks, rebar and concrete)
Drywall: drywall lines and profiles, drywall boards
Waterproofing: Waterproofing internal areas, waterproofing balconies
Plaster: plaster treatment, complete plaster, gypsum ceiling apartments, gypsum ceiling halls Tiles: wall tiles, floor tiles apartments, floor tiles halls, floor tiles balconies Floor levelling: floor levelling
Windows: windows
Doors: doors
Electrical: electrical infrastructure, electrical finishes
Hydraulic: hydraulic columns, water plumbing, sewer plumbing, sanitary ware
Painting: painting first layer, painting second layer
Cleaning: hard cleaning, final cleaning (B) residential project B (2 towers, 22 repetitive floors per each tower, 362 apartments), built in concrete wallsStructure: concrete structure (formworks, rebar and concrete)
Drywall: drywall lines and profiles, drywall boards
Waterproofing: waterproofing internal areas, waterproofing balconies
Plaster: plaster treatment, complete plaster, gypsum ceiling apartments, gypsum ceiling halls Tiles: wall tiles, floor tiles apartments, floor tiles halls, floor tiles balconies Floor levelling: floor levelling
Windows: windows
Doors: doors
Electrical: electrical infrastructure, electrical finishes
Hydraulic: hydraulic columns, water plumbing, sewer plumbing, sanitary ware
Painting: painting first layer, painting second layer
Cleaning: hard cleaning, final cleaning (C) residential project C (3 towers, 13 repetitive floors per each tower, 330 apartments), built in structural masonryMasonry: structural masonry, internal masonry
Structure: concrete slab (formworks, rebar and concrete)
Drywall: drywall lines and profiles, drywall boards, gypsum ceiling
Waterproofing: waterproofing (apartments and balconies)
Plaster: complete plaster
Tiles: wall tiles (apartments and balconies), floor tiles (apartments and balconies) Floor levelling: floor levelling
Windows: windows
Doors: doors
Electrical: electrical infrastructure, electrical finishes
Hydraulic: hydraulic columns, water plumbing, sewer plumbing, sanitary ware
Painting: painting first layer, painting second layer
Cleaning: hard cleaning, final cleaningTable 1. subcontractors and tasks.
tasks selected for analysis. The original schedules did not contain filters to facilitate the analysis. Floor number and building name text columns were inserted in each schedule to facilitate filter applications to analyze specific floors (floor view) or specific tasks (task view). The logic links were compared with the logical relationship document. The relationship between activity durations and loaded resources was checked to ensure that the durations were derived from resources. In addition, the schedules were analyzed to check if they were subject to resource levelling or resource smoothing. Finally, a workflow analysis identified discontinuous workflows and wasted time.
  The second step was to analyze the CPM schedule by visualizing it in a flowline graph. Tasks, locations, subcontractors, calendars, durations, lags, dates and logic links were manually inserted in Schedule Planner Standard (SPS) (Trimble 2016). This tool made it possible to visualize the schedule in a flowline view, while optimizing the schedule using LBMS principles. When creating the CPM flowline, first the SPS calendar was configured, inserting the same working times, holidays and project start and end dates as the original CPM schedule. Second, locations were created matching the additional columns created in the original CPM schedules. LBMS tasks were created using 

the task filter in the original CPM schedule and the logic was initially inserted based on the activity that occurred first. LBMS continuity heuristics were not used, so the start date of the first activity of each task was the same as in the original CPM schedule, if the logic had been correctly entered. Third, quantities, resources and subcontractor information were entered for each task, respecting the production rates achieved in the CPM schedule. This ensured that the durations of each activity were identical in both CPM and flowline schedules, as well as the finish date of the first location. After this, all the durations, start and end dates of activities were checked in both CPM and flowline schedules.
  If durations were different, faulty data-entry was corrected. Dates could be different due to the conversion from activities to tasks. There were two possible sources of these differences. Firstly, the work of two locations could be overlapping (happening simultaneously). In that case, the locations needed to be split in SPS to separate subtasks. If the dates in SPS were too early, some non-repetitive logic applied to that location in question. This problem was corrected by adding additional logic. After all these adjustments, the result was a flowline schedule with the same dates as in the original CPM schedule. The logic was not necessarily the same because LBMS tasks automatically create precedent relationships between different activities of the same tasks which could have been missing from the original CPM schedule. However, all the analysis regarding the CPM schedule was based on resource graphs and flowline visualizations, which require dates as their input.
  The CPM flowline was evaluated based on the total duration and maximum resources used for each subcontractor, including all the tasks performed by the subcontractors. It was also evaluated based on peak resources usage, the number of mobilizations and demobilizations for each subcontractor, the percentage of time the work proceeded continuously to the next activity of the same type and the number of activities and logic links in the CPM schedule.
  The third step was to simulate resource smoothing in SPS. The resource smoothing simulation started from the CPM flowline. Tasks which did not have a workflow were made continuous if the adjustment would not impact the project end date (i.e. the activities belonging to a task had enough total float). This simulation achieved a similar result as resource smoothing algorithms in the literature. This approach was selected because three major CPM software packages do not have resource smoothing capabilities and only perform resource levelling (Microsoft Project®, Primavera® and Asta PowerProject). The same metrics were calculated for the CPM schedules.
  The fourth step was to improve the flowline using LBMS principles, generating a new LBMS schedule for comparison. The optimization process was constrained by limiting the amount of resources available for each subcontractor to the same amount as the maximum used by the CPM schedule. The logic between different types of tasks was kept the same for both CPM and LBMS versions, but the sequence of locations could be altered if there was no apparent reason for the locations to be in a certain order (for example, structural tasks were not modified because they must go sequentially). The same calendar and independent crews in the CPM were used for LBMS, as well as the same quantities, resources and productivity rates in both schedules. The durations were calculated based on quantities and production rates. During optimization, the first step was to make all the tasks continuous. This extended project durations. Then, the production rates were synchronized by adding resources to tasks with slow production rates until the bottleneck contractor was identified as resource limits were reached. Then, the resources of faster tasks were decreased to match the production rate of the bottleneck. Finally, any tasks which could not be slowed down by decreasing resources (i.e. only one crew), were made discontinuous. The same metrics were calculated for the CPM and resource smoothing schedules and the results were compared for all CPM, resource smoothing and LBMS schedules.
Results
The logic links of all original CPM schedules (cases A, B and C) were in accordance with the logical relationship document. However, in case C, some of the tasks were linked only on the first floor, resulting in the successor tasks being done before the predecessors on higher floors. In all the schedules, the durations were calculated based on the loaded resources. Case A and case B schedules were subject to resource levelling; however, there was no evidence that resource levelling was applied for the case C schedule. There was no evidence of resource smoothing in any of the cases.
  The analyzed original CPM schedules did not contain any location-based or task-based filters. Schedules from cases A and B were accompanied with an Excel file containing a flowline graph. However, in these graphs, the flowlines were created based on the initial dates of the activities on each floor and did not consider interruptions between floors. This hid the lack of workflow and wasted time.

Figure 1. original CPM (top), CPM flowline (middle) and LBMs (bottom) schedules of case study a.  A partial view of the original CPM schedule, the initial CPM flowline and the LBMS flowline of case A are shown in Figure 1. In the bar chart view of the original CPM schedule, using the task filter, it is possible to see the lack of workflow of the final cleaning task starting from the 16th floor. However, this filter only allows the planner to evaluate one task at the time. Using the flowline visualization, the lack of workflow in several tasks was apparent with different durations as the root cause. Seven tasks (plaster treatment, floor tiles, windows, electrical finishes, hydraulic columns, sewer plumbing and final cleaning) were forced continuous with the continuity heuristics when generating the LBMS schedule. As the production rates were similar in most tasks, and optimization was constrained by CPM resource usage, most of the tasks were bottlenecks. The production rates of plaster treatment and windows tasks were decreased to match the overall production rate. As a 
  

Figure 2. original CPM (top), CPM flowline (middle) and LBMs (bottom) schedules of case study B.
result, the generated LBMS schedule presented tasks per- Figure 2 shows a partial view of the original CPM, the forming in workflow with the same duration as the CPM. CPM flowline and the LBMS schedules of case B. Through 
  

Figure 3. original CPM (top), CPM flowline (middle) and LBMs (bottom) schedules of case study C.the analysis of the first floor of the 2nd tower in the original CPM schedule, it is possible to highlight the wasted time between the tasks complete plaster and waterproofing tasks. However, the location filter applied in the Gantt chart was unable to visualize the continuity of work between different floors. In contrast, the flowline visualization of CPM showed both the location and workflow aspects simultaneously. The most important problems found in the CPM flowline were the different production rates of tasks, lack of workflow in several tasks and significant wasted time before the beginning of the waterproofing task. In the LBMS schedule, most of the tasks were planned to be continuous, except the tasks related to concrete structure, for technical reasons. The identified bottleneck was the final cleaning task. Thus, the production rates of the tasks waterproofing, plaster treatment, floor levelling, windows and electrical infrastructure tasks decreased, and the production rate of the hard cleaning task increased (respecting 

the resource limit of the subcontractor who was working on both the hard cleaning and final cleaning tasks). Due to this production rate increase, and the resource limit, the final cleaning task was planned for the 2nd tower first, with the crew moving to the 1st tower only after its conclusion. As a result, the LBMS schedule achieved better workflow with the same total duration as the CPM.
  The case C comparison is shown in Figure 3. The three towers were initially planned to run in parallel with independent crews. The original CPM schedule was visualized in yet another way. By showing tasks and collapsing locations, it was possible to see both the workflow and wasted time in the original CPM schedule. However, the flowline figure showed three towers in one single view and visualize root causes of problems caused by different task durations. As in case B, the most important problems found in the CPM flowline were different task durations, the lack of workflow in several tasks and wasted time before the beginning of the painting first layer task. In the LBMS schedule, most of the tasks (except structural masonry, concrete slabs and internal masonry) were planned for continuity. The identified bottlenecks were the complete plaster and painting first layer tasks. Thus, the production rates of the waterproofing, windows, electrical finishes, hydraulic columns and sewer plumbing tasks were decreased to match the pace of the bottleneck. The production rate of the final cleaning task was increased, taking into account the resource limit of the subcontractor. As the result, the LBMS schedule presented tasks performing in workflow with the same total duration as the CPM.
  Figure 4 shows the resource smoothing analysis made in the three case studies. In a comparison with the CPM flowlines shown in Figures 1, 2 and 3, the resource smoothing schedules had the same end date and presented more tasks with continuous flow. However, as the logic links were not modified, there are several tasks running in the same location during the same time.
  Table 2 shows the comparison of the schedules in relation to the project duration, resource usage at the peak and the number of mobilizations and demobilizations. The project durations were calculated considering only the selected tasks (Table 1), excluding, for example, earthworks and foundations. The same duration was achieved in all CPM, resource smoothing and LBMS schedules.
  Peak resource usage was calculated with SPS, which analyses the maximum number of resources working altogether. Both LBMS and resource smoothing schedules decreased the peak resources when compared with CPM (Table 2). The number of mobilizations and demobilizations was calculated based on the resource graphs of each subcontractor. While the total number of mobilizations and demobilizations was reduced by the resource smoothing simulations when compared to CPM schedules, LBMS schedules achieved the lowest number of mobilizations and demobilizations (Table 2).
  A list of the subcontractors and the maximum number of resources used in each case study are shown in Table 3. The maximum CPM resources were used as a constraint when developing the LBMS schedule. The results were similar in both schedules, except in the cases highlighted in bold in Table 3, which had fewer resources because production rates of some tasks decreased during the optimization process (cases A and C), or because after resource smoothing processes some crews were not working during the same time in different towers (case B). LBMS used the same amount or fewer resources for each subcontractor as the CPM schedule. The peak resource use was smaller in some of the resource-smoothed schedules.
  The percentage of time the work could proceed continuously to the next location of the same type is shown in Table 4. This percentage was calculated based on the number of interruptions for each task. Thus, 100% indicates the task was performed without interruptions, while any number less than 100%, and more than 0%, represents at least one interruption. The number 0% represents a task that was performed with interruptions on each floor. The percentage of continuous work in LBMS schedules was higher than in CPM schedules for all case studies. Resource smoothing simulations were between CPM and LBMS 
(Table 4).
  The number of planning elements (activities, tasks and logic links) required to model the schedule is shown in Table 5. CPM requires more activities than LBMS requires tasks to model the same schedule. Since most of the scheduling operations were implemented at the task level in LBMS, the number of meaningful planning elements was significantly lower. With layered logic, CPM requires more logic links than LBMS. To optimize the LBMS schedule, 10 operations were required in case A, 23 operations in case B and 9 operations in case C.
Discussion

Figure 4. Case a (top), case B (middle) and case C (bottom) resource smoothing schedules.All CPM, resource smoothing and LBMS schedules were evaluated based on the total duration and maximum resources used for each subcontractor, the peak resources usage, the number of mobilizations and demobilizations for each subcontractor, the percentage of time the work proceeded continuously to the next activity of the same type and the number of activities and logic links. Problems with planned workflows were encountered in the CPM schedules of all three case studies. The lack of workflow was mainly caused by starting all activities as soon as possible instead of synchronizing activity durations. The consequence of starting and stopping was that the resource usage for any subcontractor was discontinuous with peaks and valleys. Resource smoothing decreased the resource peaks and generally achieved better results in terms of resource continuity than the CPM flowline. However, LBMS achieved further improvements in the continuity of work and mobilizations and demobilizations. The result of LBMS optimizations was schedules that did not exceed subcontractor resource constraints, obeyed mandatory technical relationships and had continuous flow without crew fluctuations for most of the trades. Moreover, the LBMS schedules had the same total duration as the CPM schedules. The LBMS improvements were achieved based on a few optimization operations (between 9 and 23) using 
Table 2. Case studies results.
Case studySchedule  Total duration 
(months)  Peak resource useNumber of mobilizations and demobilizationsaCPM181214422resource 
smoothing181184056LBMs181113790Reduction (CPM  vs. LBMS)–8%14%BCPM201807050resource 
smoothing201356270LBMs201765649Reduction (CPM  vs. LBMS)–2%20%CCPM131864564resource 
smoothing131613350LBMs131632864Reduction (CPM  vs. LBMS)–12%37%the LBMS process. Improvements were possible with few operations because of the reduced amount of planning elements (tasks and logic links) in the LBMS schedules, when compared to CPM schedules.
Workflow
The lack of workflow in CPM schedules, highlighted in the three case studies, was caused mainly by the varying production rates of activities. In addition, the lack of workflow and the inability of the CPM algorithm to force work continuity caused unnecessary mobilizations and demobilizations. Better results were achieved in the resource smoothing schedules when compared with CPM, due to the increased number of tasks in workflow. However, LBMS schedules had significantly fewer mobilizations and demobilizations when compared to CPM and resource smoothing schedules, achieving the same total duration in all cases. As a side effect of continuous flow, the LBMS schedules also reduced the overall labour peak for all projects when compared with CPM schedules. Resource smoothing schedules reduced the overall labour peak, but there were some tasks without workflow and sometimes more than one task running at the same location, which could cause workflow interruptions. Although it is possible to plan flow in CPM, it would require multiple iterations and manual adjustments of constraint dates to model forced continuity, making it more difficult to use CPM to incorporate workflow into the schedules with any variation between task durations (Olivieri et al. 2016).
  Finding the correct production rate in CPM was also difficult because it requires editing the durations of each activity separately. In contrast, LBMS increases productivity and improves task workflows by forcing tasks to be continuous by default. LBMS algorithms automatically calculate the dates when tasks should start to allow for continuous work (Kenley and Seppänen 2010). CPM location activities were collected into LBMS tasks and logic was applied at the task level. Thus, LBMS schedules modelled the same logic with significantly fewer logic links. Schedule optimization to find the correct production rates was easier because all the locations of the same task were updated with one operation. Significantly better workflow was achieved in the case studies by implementing just a few changes. Furthermore, the continuous workflow naturally decreased mobilizations and demobilizations (between 14 and 37%). Peak resources also decreased in each project.
Resource smoothing
In CPM scheduling, resource smoothing algorithms adjust scheduling activities that do not belong to the critical path within the constraints of their float (Cheng et al. 2014). Thus, resource smoothing in CPM achieves similar results as LBMS for non-critical tasks. However, resource smoothing will not achieve workflow when activities turn critical. In contrast, LBMS forces continuity without considering the float of activities and synchronizing production rates. In 
  
Table 3. Maximum resources used for each subcontractor (including all the tasks containing work of the subcontractor).

	Case A	Case B	Case C
SubcontractorsCPMRes. smooth.LBMSCPMRes. smooth.LBMSCPMRes. smooth.LBMSCleaning999242424161616doors222444121212drywall121212242424181818electrical333682999Floor levelling444222999Hydraulic131313242824121212Painting888161616242424Plaster202018222222181818structure404040107107107484848tiles262625363236181818Waterproofing444888443Windows55222212129Masonry––––––545454note: Bold: Fewer resources when compared with other schedules.
Table 4. Percentage of time working continuously.
TasksCase A (%)Case B (%)Case C (%)CPMRes. smooth.LBMSCPMRes. smooth.LBMSCPMRes. smooth.LBMS(1) Concrete structure000000000(2) drywall lines and profiles10010010090.910010048.748.7100(3) drywall boards10010010090.910010048.7100100(4) Waterproofing10010010010010010038.538.5100(5) Plaster treatment0010000100–––(6) Complete plaster10010010095.510010064.1100100(7) Floor tiles33.310010032.610010064.1100100(8) Walls tiles1001001001001001000100100(9) Floor levelling10010010010010010051.3100100(10) gypsum ceiling10010010097.710010087.287.2100(11) Windows2626100010010038.5100100(12) doors1001001001001001000100100(13) electrical infrastructure100100100010010000100(14) electrical finishes69.610010000100033.3100(15) Hydraulic columns78.310010095.510010015.415.4100(16) Water plumbing10010010090.910010038.538.5100(17) sewer plumbing78.310010090.910010038.538.5100(18) sanitary ware10010010000100100100100(19) Painting first layer100100100100100100100100100(20) Painting second layer10010010000100100100100(21) Hard cleaning10010010010010010046.2100100(22) Final cleaning010010081.8100100100100100(23) structural masonry––––––000(24) internal masonry––––––000average (%)76.687.595.565.177.395.542.665.287increased LBMs vs. CPM (%)2547104Table 5. Planning elements.Case study	Schedule	Number of activities (CPM)/tasks (LBMS)Number of logic linksNumber of operations to improve the CPM schedulesa	CPM	9121426	LBMs	3479510	Reduction	878 (96%)631 (44%)B	CPM	17482244	LBMs	68150223	Reduction	1680 (96%)742 (33%)C	CPM	9361599	LBMs	469049	Reduction	890 (95%)695 (43%)  
the three case studies, the simulated resource smoothing approach achieved better results than the CPM, but had fewer tasks in workflow than in LBMS. The LBMS approach had an initial increase in project duration, which was then optimized by increasing the production rates of slower tasks until a bottleneck was found, with other tasks slowed down to match the rate of the bottleneck (Lowe et al. 2012). It can also be argued that workflow is more important for critical tasks than for non-critical tasks, because continuous flow increases predictability and decreases the risk for the task (Kenley and Seppänen 2010).
  The optimized schedules that incorporated LBMS concepts demonstrated that the development of the schedule considering continuous workflow automatically resulted in better resource levelling without the use of any formal resource levelling algorithm. In addition, these optimized schedules demonstrated a reduction in resource peak. This levelling of resources and reduction of resource peak resulted from planning continuous workflows and optimizing the schedule based on the LBMS process. Although the benefits of continuous workflow have been widely discussed (e.g. Arditi et al. 2002), the side effects of levelling subcontractor overall resource levels and overall resource peaks were not previously documented.
Number of planning elements
CPM usually requires multiple activities to represent a repetitive or linear project (Mattila and Park 2003), as demonstrated in the case studies. CPM schedules include activities and each activity is a planning entity. LBMS combines the activities to tasks of the same type, representing a total reduction in planning elements of the analyzed case studies (between 95 and 96%). Most of the planning decisions were made at the task level, rather than at the activity level. Thus, since the number of elements in the plan was smaller, adjustments were easily made and different scenarios could be simulated and analyzed (Kenley 2005). Indeed, the improvements made in this research required just 10 modifications in case A, 23 in case B and 9 in case C.
  The number of logic links required to model a schedule is much lower in LBMS due to its layered logic. LBMS models the same schedule with fewer links. The number of logic links required to model the case schedules was reduced between 33 and 44% because the logic was planned at the task level and applied to locations based on one of five logic layers. The number of links was based on the number of tasks and not the number of floors. Therefore, the benefit of LBMS over CPM increases with the number of locations.
Visualization
 Using specific filters, CPM schedules can be visualized in several ways. The traditional view is partially shown in Figure 1, where the tasks were divided by floors and it is possible to visualize the lack of workflow. However, due to the large number of lines and pages the complete CPM schedule demands, it was difficult analyzing wasted time or checking task sequences on a specific floor. The problem of visualizing the sequence of tasks on a floor can be solved through a simple filter, as shown in Figure 2, making it possible to analyze the wasted time in a location. However, in this view, it is not possible to visualize the floors together, making workflow analysis difficult. On the other hand, the original CPM schedule presented in Figure 3 contains all the tasks and floors necessary to perform in one tower. Using this visualization, it was possible to analyze both workflow and location use. However, the root causes of poor workflows, production rate differences, were still hidden in this view.
  Although the traditional visualization of CPM and LBMS schedules differ, they all present the same information – dates in locations. Therefore, it would be an easy task to add a flowline view to a CPM software although most of the CPM packages have not done so. However, the key differences between CPM and LBMS were more fundamental than visualization. For example, fixing the visualized workflow problems using the CPM algorithm required significant manual operations due to the number of planning elements, and as illustrated in the simulations of previous sections, resource smoothing would result only in a partial fix. The root causes of workflow problems in cases A, B and C were the varying production rates of tasks and inefficient sequencing of locations.
Conclusions
This research showed the differences of CPM and LBMS in the schedule planning phase. Better workflows were achieved using LBMS without affecting the total duration. 
Continuous flow resulted in lower resource usage at the peak utilization and fewer variations in resource use. Resource smoothing of the CPM schedules would have provided a partial fix for tasks with a high float but due to the high number of critical tasks, workflow optimization was only possible by synchronizing the production rates using the LBMS process. Continuous flow is more important for critical tasks than for non-critical tasks.
  The first hypothesis was supported – LBMS-based workflows did not increase a project’s total duration. The main causes of poor workflow in CPM schedules were identified as starting tasks as soon as possible, variability of durations and the inability of CPM algorithms to schedule continuous work. This validated the results of other researchers. Using LBMS, better workflows resulted due to continuity heuristics. The total project durations did not increase due to LBMS production rate synchronization processes. It was also demonstrated that achieving synchronized durations required just a few modifications because production rates were optimized at the task level. LBMS achieved significantly better workflows, measured by the number of mobilizations and demobilizations without using any formal resource-levelling algorithms. Resource smoothing partially improved the schedules but could not impact critical tasks and therefore did not perform as well as LBMS.
  The second hypothesis dealt with the number of planning elements in LBMS and CPM. This hypothesis was strongly supported by the evidence in the case studies. The number of tasks was significantly lower than the number of CPM activities in all case studies. The number of logic links required to model a schedule was a fraction of those found in CPM schedules. The number of activities and logic links directly correlated with the time required to develop and optimize a schedule.
  The three key shortcomings of CPM, namely lack of workflow, inability to schedule continuous resource usage and number of planning elements were successfully resolved by LBMS without apparent disadvantages in construction projects that demonstrate location repetition. Although most construction projects include similar tasks performed over multiple locations, it is not clear from the results whether the benefit would be larger or smaller in less repetitive projects, where locations may include unique activities, quantities may vary between locations and logic could change in those locations. For future research, comparisons could be made of risk levels in CPM and LBMS schedules, of cash flows and the ability to perform delay analysis using the layered logic approach of LBMS. Additionally, although several LBMS production control case studies have already been presented, a formal comparison of LBMS and CPM concerning production control has not been carried out and would be an interesting avenue for future research.
Disclosure statement
No potential conflict of interest was reported by the authors.
References
Akpan, E.O.P., 2000. Resource smoothing: a cost minimization approach. Production planning & control, 11 (8), 775–780.
Anagnostopoulos, K.P. and Koulinas, G.K., 2010. A simulated annealing hyperheuristic for construction resource levelling. 
Construction management and economics, 28, 163–175.
Arditi, D., Tokdemir, O.B., and Suh, K., 2002. Challenges in line-ofbalance scheduling. Journal of construction engineering and management, 128 (6), 545–556.
Bansal, V.K. and Pal, M., 2009. Construction schedule review in GIS with a navigable 3D animation of project activities. International journal of project management, 27, 532–542.
Benjaoran, V., Tabyang, W., and Sooksil, N., 2015. Precedence relationship options for the resource levelling problem using a genetic algorithm. Construction management and economics, 33 (9), 711–723.
Bragadin, M.A. and Kähkönen, K., 2016. Schedule health assessment of construction projects. Construction management and economics, 34 (12), 875–897.
Büchmann-Slorup, R., 2014. Applying critical chain buffer management theory in location-based management. Construction management and economics, 32 (6), 506–519.
Cheng, M.Y., Tran, D.H., and Hoang, N.D., 2014. Fuzzy clustering chaotic-based differential evolution for resource levelling in construction projects. Journal of civil engineering and management, 1–12.
Damci, A. and Polat, G., 2014. Impacts of different objective functions on resource levelling in construction projects: a case study. Journal of civil engineering and management, 20 (4), 537–547.
Damci, A., Arditi, D., and Polat, G., 2013. Resource leveling in line-of-balance scheduling. Computer-aided civil and infrastructure engineering, 28, 679–692.
Evinger, J., Mouflard, C., and Seppänen, O., 2013. Productivity effects of starting as early as possible in hospital construction. In: Proceeding of 21th Annual Conference of the International Group for Lean Construction. Fortaleza.
Galbreath, R.V., 1965. Computer program for levelling resource usage. Journal of the construction division, 91 (1), 107–124.
Galloway, P.D., 2006. Survey of the construction industry relative to the use of CPM scheduling for construction projects. Journal of construction engineering and management, 132 (7), 697–711.
Hamzeh, F., Zankoul, E., and Rouhana, C., 2015. How can ‘tasks made ready’ during lookahead planning impact reliable workflow and project duration? Construction management and economics, 33 (4), 243–258.
Harris, R.B., 1990. Packing method for resource levelling (PACK). Journal of construction engineering and management, 116 (2), 302–316.
Harris, R.B. and Ioannou, P.G., 1998. Scheduling projects with repeating activities. Journal of construction engineering and management, 124 (4), 269–278.
Hegazy, T., 1999. Optimization of resource allocation and levelling using genetic algorithms. Journal of construction engineering and management, 125 (3), 167–175.
Hegazy, T. and Kamarah, E., 2008. Efficient repetitive scheduling for high-rise construction. Journal of construction engineering and management, 134 (4), 253–264.
Hegazy, T. and Kassab, M., 2003. Resource optimization using combined simulation and genetic algorithms. Journal of construction engineering and management, 129 (6), 698–705.
Hegazy, T. and Menesi, W., 2010. Critical path segments scheduling technique. Journal of construction engineering and management, 136 (10), 1078–1085.
Jongeling, R. and Olofsson, T., 2007. A method for planning of work-flow by combined use of location-based scheduling and 4D CAD. Automation in construction, 16 (2), 189–198.
Kala, T., Mouflard, C., and Seppänen, O., 2012. Production control using location-based management system on a hospital construction project. In: Proceeding of 20th Annual Conference of the International Group for Lean Construction. San Diego.
Kastor, A. and Sirakoulis, K., 2009. The effectiveness of resource levelling tools for resource constraint project scheduling problem. International journal of project management, 27 (5), 493–500.
Kelley, J.E. and Walker, M., 1959. Critical path planning and scheduling. In: Proceeding of Eastern Joint Computer Conference.
Kenley, R., 2004. Project micromanagement: practical site planning and management of workflow. In: Proceeding of 12th Annual Conference of the International Group for Lean Construction. Helsingør.
Kenley, R., 2005. Dispelling the complexity myth: founding lean construction on location-based planning. In: Proceeding of 13th Annual Conference of the International Group for Lean Construction. Sydney.
Kenley, R. and Seppänen, O., 2010. Location-based management for construction: planning, scheduling and control. Abingdon: Spon Press.
Kim, Y.W. and Ballard, G., 2010. Management thinking in the earned value method system and the last planner. Journal of management in engineering, 26 (4), 223–228.
Koskela, L., et al., 2014. If CPM is so bad, why have been using it so long? In: Proceeding of 12th Annual Conference of the International Group for Lean Construction. Oslo.
Lowe, R.H., et al., 2012. A comparison of location-based scheduling with the traditional critical path method. Technical paper. American College of Construction Lawyers.
Lu, M. and Lam, H.C., 2009. Transform schemes applied on non-finish-to-start logical relationships in project network diagrams. Journal of construction engineering and management, 135 (9), 863–873.
Lu, M., Lam, H.C., and Dai, F., 2008. Resource-constrained critical path analysis based on discrete event simulation and particle swarm optimization. Automation in construction, 17 (6), 670–681.
Lucko, G., Alves, T.C.L., and Angelim, V.L., 2014. Challenges and opportunities for productivity improvement studies in linear, repetitive, and location-based scheduling. Construction management and economics, 32 (6), 575–594.
Mattila, K.G. and Park, A., 2003. Comparison of linear scheduling model and repetitive scheduling method. Journal of construction engineering and management, 129 (1), 56–64.
Mubarak, S., 2015. Construction project scheduling and control. 3rd ed. New Jersey: John Wiley & Sons.
Olivieri, H., Seppänen, O., and Granja, A.D., 2016. Integrating LBMS, LPS and CPM: a practical process. In: Proceeding of 24th Annual Conference of the International Group for Lean Construction. Boston.
Patton, M.Q., 1990. Qualitative evaluation and research methods. Thousand Oaks: Sage Publications.
PMI, 2013. A guide to the project management body of knowledge: PMBOK guide. Project Management Institute.
Russell, A.D. and Wong, W.C.M., 1993. New generation of planning structures. Journal of construction engineering and management, 119 (2), 196–214.
Seppänen, O., 2009. Empirical research on the success of production control in building construction projects. Dissertation (PhD). Helsinki University of Technology.
Seppänen, O. and Aalto, E., 2005. A case study of line-of-balance based schedule planning and control system. In: Proceeding of 13th Annual Conference of the International Group for Lean Construction. Sidney.
Seppänen, O. and Kankainen, J., 2004. Empirical research on deviations in production and current state of project control. In: Proceeding of 12th Annual Conference of the International Group for Lean Construction. Helsingor.
Seppänen, O., Evinger, J., and Mouflard, C., 2014. Effects of the location-based management system on production rates and productivity. Construction management and economics, 32 (6), 608–624.
Shah, R.K. and Dawood, N., 2011. An innovative approach for generation of a time location plan in road construction projects. Construction management and economics, 29, 435– 448.
Trimble, 2016. [online]. Available from: http://www.trimble. com/ [Accessed 7 November 2016].
Wright, T.P., 1936. Factors affecting the cost of airplanes. Journal of the aeronautical sciences, 3 (4), 122–128.
Yang, J.B. and Kao, C.K., 2012. Critical path effect based delay analysis method for construction projects. International journal of project management, 30, 385–397.
Yassine, T., et al., 2014. Implementing takt-time planning in construction to improve work flow. In: Proceeding of 22th Annual Conference of the International Group for Lean Construction. Oslo.
Yin, R.K., 2013. Case study research: design and methods. Beverly Hills: Sage Publications.

  

  

  
110 	 	H . OLIVIERI ET AL.
  
	CONSTRUCTION MANAGEMENT AND ECONOMICS 	 	111
  

  
